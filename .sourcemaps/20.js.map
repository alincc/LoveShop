{"version":3,"sources":["../../src/spa/+screens/welcome/welcome.ts","../../src/spa/+screens/welcome/checkConnectionNetwork.service.ts","../../src/spa/+screens/welcome/welcome.service.ts","../../src/spa/+screens/welcome/welcome.module.ts","../../src/spa/+screens/whereToSpend/where2SpendSharingData.services.ts","../../src/spa/+screens/welcome/httpCheckNetwork.service.ts"],"names":[],"mappings":"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","file":"20.js","sourcesContent":["import {Component} from '@angular/core';\nimport {IonicPage, NavController} from 'ionic-angular';\nimport {RouteManagerService} from './../../framework/services/routeManager/routeManager.service';\nimport {CheckConnectionNetworkService} from './checkConnectionNetwork.service';\nimport {HttpCheckNetworkService} from \"./httpCheckNetwork.service\";\nimport {AuththenticationGuardService} from \"../../framework/login/authenticationGuard.service\";\nimport {PinCodeService} from \"../../framework/services/pinCodeService/pinCode.service\";\nimport {AuthenticationDataSharingService} from \"../../framework/login/authenticationDataSharing.service\";\nimport {VerifyPINService} from '../AccountManagement/verifyPIN/verifyPIN.service';\nimport {LoadingIndicatorService} from \"../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {Where2SpendSharingDataService} from \"../whereToSpend/where2SpendSharingData.services\";\nimport {WelcomeService} from \"./welcome.service\";\nimport {Observable} from 'rxjs/Observable';\nimport {AppConfig as app} from \"../../framework/appConfig\";\nimport {Utils} from \"../../framework/services/utilities/utilities\";\n\n@IonicPage()\n@Component({\n  selector: 'page-welcome',\n  templateUrl: 'welcome.html',\n  providers: [\n    CheckConnectionNetworkService,\n    HttpCheckNetworkService,\n    WelcomeService\n  ]\n})\nexport class WelcomePage {\n  constructor(public routeManager: RouteManagerService,\n              private checkConnectionNetworkService: CheckConnectionNetworkService,\n              private welcomeService: WelcomeService,\n              public authGuardService: AuththenticationGuardService,\n              private navCtrl: NavController) {\n\n  }\n\n  ionViewWillEnter() {\n    let passwordPolicy = localStorage.getItem('password-policy');\n    if (this.authGuardService.invalidTokenState$.getValue() &&\n      !VerifyPINService.getInstance().VisibleScreen) {\n      this.authGuardService.invalidTokenState$.next(false);\n    }\n    if (!this.authGuardService.isAuthenticated() || !passwordPolicy) {\n      this.getContentMSG();\n      this.checkConnectionNetworkService\n        .getPasswordValidationRules()\n        .subscribe(res => {\n          localStorage.setItem('password-policy', JSON.stringify(res.response));\n        });\n    } else {\n      this.OnNavigate();\n    }\n  }\n\n\n  public getContentMSG() {\nLoadingIndicatorService.getInstance().showLoadingIndicator();\n    const observer = {\n      next: (res) => {\n        let msg_code =\n          [\n            'cardCsc_required',\n            'cardCsc_less_than_min',\n            'cardCsc_invalid_characters',\n            'reset_fingerprint',\n            'use_of_fingerprint',\n            'use_fingerprint_not_PIN',\n            'use_same_finger',\n            'five_digit_pin',\n            'confirm_pin',\n            'PIN_5_digit',\n            'PIN_and_confirm_do_not_match',\n            'create_print_ID',\n            'skip_id_setup',\n            'wrong_touch_ID',\n            'too_many_attempts',\n            'setup_PIN',\n            'token_expired',\n            'fail_attempts',\n            'wrong_PIN',\n            'required',\n            'quantity_invalid',\n            'park_catalogue_product_out_of_stock',\n            'invalid_phone_format',\n            'gps_unavailable',\n            'park_api_unexpected_error',\n            'park_api_email_already_exists',\n            'park_api_touch_ID_not_available',\n            'park_api_user_id_no_match',\n            'park_api_minimum_age',\n            'park_api_date_of_birth',\n            'park_api_card_number_no_match',\n            'firstName_invalid_characters',\n            'lastName_invalid_characters',\n            'park_api_invalid_postcode',\n            'email_invalid_email',\n            'confirmEmail_equal_to',\n            'PIN_4_digits',\n            'park_api_invalid_number',\n            'park_api_10_digits',\n            'password_invalid_characters',\n            'park_api_password_no_match',\n            'park_api_serial_number_no_match',\n            'enter_postcode_or_search_for_an_address',\n            'enter_address_manually',\n            'account_management_to_add_card_register',\n            'account_management_register_addcard',\n            'account_management_already_have_account',\n            // 'ForgotPassword_en_properties',\n            'enter_account_password_to_view_card',\n            'account_management_refund_full_value',\n            'account_management_full_refund_being_processed',\n            'account_management_click_to_refund_balance',\n            'account_management_no_cards_available',\n            'account_management_set_default_card',\n            'use_current_location',\n            'account_management_logout',\n            'PIN_enter_5_digit',\n\n          ];\n\n        for (let i = 0; i < msg_code.length; i++) {\n          if (Utils.isNotNull(res[i]) && Utils.isNotNull(res[i].response) && Utils.isNotNull(res[i].response.message)) {\n            let mg_item_code = msg_code[i];\n            app.Configuration.ContentMessage[mg_item_code] = res[i].response.message;\n          }\n        }\n      },\n      error: (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      },\n      complete: () => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        LoadingIndicatorService.getInstance().resetState();\n      }\n    };\n    Observable.combineLatest(\n      this.welcomeService.getContentFromRetreiveContent(\"order.datacash-payment.capture.default.error.cardCsc-required\"),\n      this.welcomeService.getContentFromRetreiveContent(\"order.datacash-payment.capture.default.error.cardCsc-less-than-min\"),\n      this.welcomeService.getContentFromRetreiveContent(\"order.datacash-payment.capture.default.error.cardCsc-invalid-characters\"),\n      this.welcomeService.getContentFromRetreiveContent(\"reset-fingerprint\"),\n      this.welcomeService.getContentFromRetreiveContent(\"use-of-fingerprint\"),\n      this.welcomeService.getContentFromRetreiveContent(\"use-fingerprint-not-PIN\"),\n      this.welcomeService.getContentFromRetreiveContent(\"use-same-finger\"),\n      this.welcomeService.getContentFromRetreiveContent(\"5-digit-pin\"),\n      this.welcomeService.getContentFromRetreiveContent(\"confirm-pin\"),\n      this.welcomeService.getContentFromRetreiveContent(\"PIN-5-digits\"),\n      this.welcomeService.getContentFromRetreiveContent(\"PIN-and-confirm-do-not-match\"),\n      this.welcomeService.getContentFromRetreiveContent(\"create-print-ID\"),\n      this.welcomeService.getContentFromRetreiveContent(\"skip-id-setup\"),\n      this.welcomeService.getContentFromRetreiveContent(\"wrong-touch-ID\"),\n      this.welcomeService.getContentFromRetreiveContent(\"too-many-attempts\"),\n      this.welcomeService.getContentFromRetreiveContent(\"setup-PIN\"),\n      this.welcomeService.getContentFromRetreiveContent(\"token-expired\"),\n      this.welcomeService.getContentFromRetreiveContent(\"fail-attempts\"),\n      this.welcomeService.getContentFromRetreiveContent(\"wrong-PIN\"),\n      this.welcomeService.getContentFromRetreiveContent(\"required\"),\n      this.welcomeService.getContentFromRetreiveContent(\"quantity-invalid\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-catalogue.product.out-of-stock\"),\n      this.welcomeService.getContentFromRetreiveContent(\"invalid-phone-format\"),\n      this.welcomeService.getContentFromRetreiveContent(\"gps-unavailable\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.unexpected-error\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api-email-already-exists\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api-touch-ID-not-available\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.user-id-no-match\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.minimum-age\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.date-of-birth\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.card-number-no-match\"),\n      this.welcomeService.getContentFromRetreiveContent(\"firstName-invalid-characters\"),\n      this.welcomeService.getContentFromRetreiveContent(\"lastName-invalid-characters\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.invalid-postcode\"),\n      this.welcomeService.getContentFromRetreiveContent(\"email-invalid-email\"),\n      this.welcomeService.getContentFromRetreiveContent(\"confirmEmail-equal-to\"),\n      this.welcomeService.getContentFromRetreiveContent(\"PIN-4-digits\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.invalid-number\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.10-digits\"),\n      this.welcomeService.getContentFromRetreiveContent(\"password-invalid-characters\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.password-no-match\"),\n      this.welcomeService.getContentFromRetreiveContent(\"park-api.serial-number-no-match\"),\n      this.welcomeService.getContentFromRetreiveContent(\"enter-postcode-or-search-for-an-address\"),\n      this.welcomeService.getContentFromRetreiveContent(\"enter-address-manually\"),\n\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.to-add-card-register\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.register-addcard\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.already-have-account\"),\n      // this.welcomeService.getContentFromRetreiveContent(\"ForgotPassword_en.properties\"),\n\n      this.welcomeService.getContentFromRetreiveContent(\"enter-account-password-to-view-card\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.refund-full-value\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.full-refund-being-processed\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.click-to-refund-balance\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.no-cards-available\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.set-default-card\"),\n      this.welcomeService.getContentFromRetreiveContent(\"use-current-location\"),\n      this.welcomeService.getContentFromRetreiveContent(\"account-management.logout\"),\n      this.welcomeService.getContentFromRetreiveContent(\"PIN-enter-5-digit\")\n\n    ).subscribe(observer)\n  }\n\n\n  ionViewDidEnter() {\n    Where2SpendSharingDataService.getInstance().resetState();\n  }\n\n  goToW2S() {\n    this.navCtrl.push('Where2SpendInStoreMapPage')\n  }\n\n  OnNavigate() {\n    if (PinCodeService\n        .getInstance()\n        .needSetupPinCode(AuthenticationDataSharingService.getInstance().loginEmail) === true\n    ) {\n      this.navCtrl.setRoot('SetupPINPage', {nextPage: 'TouchIDSettingFirstTimePage'});\n    } else {\n      this.navCtrl.setRoot('TabsPage', {showVerifyPIN: true});\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/welcome/welcome.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpCheckNetworkService } from \"./httpCheckNetwork.service\";\n\n@Injectable()\nexport class CheckConnectionNetworkService {\n  constructor(\n    private httpCheckNetwork: HttpCheckNetworkService\n  ) {\n  }\n\n  getPasswordValidationRules(): Observable<any> {\n    return this.httpCheckNetwork.get(\"account/password-policy\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/welcome/checkConnectionNetwork.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {HttpService} from \"../../framework/services/httpService/http.service\";\r\n\r\n@Injectable()\r\nexport class WelcomeService {\r\n\r\n    constructor(private http: HttpService) {\r\n    }\r\n\r\n    getPasswordPolicy(): Observable<any> {\r\n        return this.http.get(\"/account/password-policy\");\r\n    }\r\n\r\n    getContentFromRetreiveContent(code): Observable<any> {\r\n        return this.http.get('cms/message/code=' + code);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/welcome/welcome.service.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n// import { PinchZoomModule } from '../../../libs/pinch-zoom/pinch-zoom.module';\nimport { WelcomePage } from './welcome';\nimport { HttpCheckNetworkService } from \"./httpCheckNetwork.service\";\n\n@NgModule({\n  declarations: [WelcomePage],\n  providers: [HttpCheckNetworkService],\n  imports: [\n    // PinchZoomModule,\n    IonicPageModule.forChild(WelcomePage)\n  ],\n  exports: [WelcomePage]\n})\nexport class WelcomePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/welcome/welcome.module.ts","import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nexport class Where2SpendSharingDataService {\r\n\r\n    private static _instance: Where2SpendSharingDataService;\r\n    \r\n    categories: any;\r\n    selectedCard: any;\r\n    useMyLocation: any;\r\n    currenrLocation: any;\r\n    keepLocation: any;\r\n    keepData: any;\r\n    refreshCategory: any;\r\n    gpsStatus: any;\r\n    needBackToYOurCardDetail: boolean = false;\r\n    pickupAddress: string;\r\n\r\n    updateEvent$: Subject<any> = new Subject();\r\n\r\n    set needBackToYOurCard(status) {\r\n        this.needBackToYOurCardDetail =  status;\r\n    }\r\n\r\n    get needBackToYOurCard() {\r\n        return this.needBackToYOurCardDetail;\r\n    }\r\n\r\n    resetState() {\r\n        this.categories = null;\r\n        this.selectedCard = null;\r\n        this.useMyLocation = true;\r\n        this.currenrLocation = false;\r\n        this.keepLocation = false;\r\n        this.keepData = false;\r\n        this.refreshCategory = false;\r\n        this.gpsStatus = false;\r\n        this.needBackToYOurCardDetail = false;\r\n    }\r\n\r\n    static getInstance(): Where2SpendSharingDataService {\r\n        if(!Where2SpendSharingDataService._instance){\r\n            Where2SpendSharingDataService._instance = new Where2SpendSharingDataService();\r\n        }\r\n        return Where2SpendSharingDataService._instance ;\r\n    }\r\n\r\n    constructor(\r\n    ) {\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/whereToSpend/where2SpendSharingData.services.ts","import { Utils } from \"../../framework/services/utilities/utilities\";\nimport { ToastMessageService } from \"../../framework/services/toastMessageService/toastMessage.service\";\nimport { Injectable } from '@angular/core';\nimport {\n  Http,\n  Headers,\n  RequestOptions\n} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/timeout';\nimport 'rxjs/add/operator/delay';\nimport { AuththenticationGuardService } from \"../../framework/login/authenticationGuard.service\";\nimport { MobileDeviceService } from \"../../framework/services/mobileDeviceService/mobileDeviceService.service\";\nimport { AppConfig as app } from \"../../framework/appConfig\";\n\nconst DEFAULT_ERROR_MSG = app.Configuration.HttpService.DEFAULT_ERROR_MSG;\nconst API_Authentication = app.Configuration.HttpService.API_Authentication;\nconst NO_CONNECTION_MSG = app.Configuration.HttpService.NO_CONNECTION_MSG;\nconst TOKEN_INVALID = app.Configuration.HttpService.TOKEN_INVALID;\n\n@Injectable()\nexport class HttpCheckNetworkService {\n  private callCount: number = 0;\n  private receiveTimeout: number = 12000;\n  constructor(\n    private authenticationService: AuththenticationGuardService,\n    private http: Http\n  ) {\n    this.callCount = 0;\n  }\n\n  private extractData(res: Response | any) {\n    if (res.status <= 4) {\n      ToastMessageService.getInstance().showToastMessage(NO_CONNECTION_MSG);\n    } else if (res.status === 401) {\n      let errors = res.json().errors;\n      let message = '';\n      if (Utils.lengthGreaterThan0(errors)) {\n        if (errors[0].code === \"token.invalid\" || errors[0].code === \"park-api.token.expired\") {\n          this.authenticationService.invalidToken$.next({\n            message: \"Token is invalid.\"\n          });\n        }\n        message = errors[0].message;\n      } else {\n        message = DEFAULT_ERROR_MSG;\n      }\n      ToastMessageService.getInstance().showToastMessage(message, app.Configuration.HttpService.time2ShowToast);\n      return;\n    } else if (res.status !== 200) {\n      let message = DEFAULT_ERROR_MSG;\n      let result: any = {};\n      try {\n        result = res.json();\n      } catch (error) {\n      }\n      if (Utils.isNotNull(result) && Utils.isNotNull(result.errors) && result.errors.length > 0) {\n        if (Utils.isNotNull(result.errors[0].message)) {\n          message = result.errors[0].message;\n        } else {\n          let code = result.errors[0].code;\n          if (Utils.isNotNull(code)) {\n            this.getMessage('cms/message/code=' + code);\n          } else {\n            message = DEFAULT_ERROR_MSG;\n          }\n        }\n      } else {\n        message = DEFAULT_ERROR_MSG;\n      }\n      ToastMessageService.getInstance().showToastMessage(message);\n    }\n\n    let result: any;\n    if (res.ok === true) {\n      result = res.json() || {};\n    } else {\n      result = Observable.of<any>(res);\n    }\n    result.ok = res.ok;\n    result.status = res.status;\n\n    return result;\n  }\n\n  private extractDataMessage(res: Response | any) {\n    let message = '';\n    if (res.status <= 4) {\n      ToastMessageService.getInstance().showToastMessage(NO_CONNECTION_MSG);\n    } else if (res.status === 401) {\n      let errors = res.json().errors;\n      if (Utils.lengthGreaterThan0(errors)) {\n        if (errors[0].code === \"token.invalid\") {\n          this.authenticationService.userLogout$.emit({\n            message: TOKEN_INVALID\n          });\n        }\n      }\n    } else if (res.status !== 200) {\n      message = DEFAULT_ERROR_MSG;\n    } else {\n      let result: any;\n      if (res.ok === true) {\n        result = res.json() || {};\n      } else {\n        result = Observable.of<any>(res);\n      }\n      message = result.message;\n    }\n    ToastMessageService.getInstance().showToastMessage(message);\n  }\n\n  getMessage(api: string) {\n    return this.http\n      .get(\n      this.getFullApiUrl(api),\n      this.headerOptionsGetContent()\n      ).subscribe(res => {\n        let message = DEFAULT_ERROR_MSG;\n        try {\n          const body = res.json();\n          if (body && body.response && body.response.message) {\n            message = body.response.message;\n          } else if (body && Array.isArray(body.errors) && body.errors.length > 0) {\n            message = body.errors[0];\n          } else {\n            message = DEFAULT_ERROR_MSG;\n          }\n        } catch (error) {\n          message = DEFAULT_ERROR_MSG;\n        }\n        ToastMessageService.getInstance().showToastMessage(message);\n      },\n      error => {\n        ToastMessageService.getInstance().showToastMessage(DEFAULT_ERROR_MSG);\n      });\n  }\n\n  private headerOptionsGetContent() {\n    let headers = new Headers({\n      'Content-Type': 'application/json',\n      'API_Authentication': API_Authentication,\n      'Device_Name': MobileDeviceService.getInstance().getDeviceType(),\n    });\n    let options = new RequestOptions({ headers: headers });\n    return options;\n  }\n\n  // Fetch data by get method from backend API service\n  // tslint:disable-next-line:member-ordering\n  get(api: string): Observable<any> {\n\n    // if don't need to refresh token then directly call API\n    // ...using get request\n    return this.http\n      .get(\n      this.getFullApiUrl(api),\n      this.headerOptions()\n      )\n      .retry(5)\n      .timeout(this.receiveTimeout)\n      // ...and calling .json() on the response to return data\n      .map(response => {\n        return this.extractData(response);\n      })\n      // ...errors if any\n      .catch((err) => {\n        return this.extractData(err);\n      });\n  }\n\n  // private instance variable to hold base url\n  private getFullApiUrl(api): string {\n    return api.indexOf(\"http\") === -1\n      ? app.Configuration.HttpService.baseApiUrl + api\n      : api;\n  }\n\n  private headerOptions() {\n    // ... Set content type to JSON\n    let headers = new Headers({\n      'Content-Type': 'application/json',\n      'API_Authentication': API_Authentication,\n      'Authorization': this.authenticationService.getToken(),\n      'Device_Name': MobileDeviceService.getInstance().getDeviceType()\n    });\n    // Create a request option\n    let options = new RequestOptions({ headers: headers });\n    return options;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/welcome/httpCheckNetwork.service.ts"],"sourceRoot":""}