{"version":3,"sources":["../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.module.ts","../../src/spa/framework/validations/validator-maxlengthField.directive.ts","../../src/spa/+screens/CardManagement/checkBalance/cardBalanceSharingData.service.ts","../../node_modules/@ionic-native/card-io/index.js","../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.ts","../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.service.ts"],"names":[],"mappings":"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","file":"27.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CheckBalanceStep1Page } from './checkBalanceStep1';\n\n@NgModule({\n  declarations: [CheckBalanceStep1Page],\n  imports: [IonicPageModule.forChild(CheckBalanceStep1Page)],\n  exports: [CheckBalanceStep1Page]\n})\nexport class CheckBalanceStep1PageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.module.ts","import {\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function maxlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no more than ${length} characters in length.`;\n}\n\nexport function maxlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\nexport function maxlengthFieldValidatorExtraCard(\n    length: number,\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = parseInt(control.value);\n        if (input !== null && typeof input !== 'undefined') {\n            return (input > length)\n                ? { maxLengthField: errorMessageExtraCard(length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessageExtraCard(\n    length\n): string {\n    return `Maximum ${length} extra gift cards.`;\n}\n\nexport function maxlengthFieldValidatorCSC(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessageCSC(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessageCSC(\n  fieldName: string = 'field',\n  length: number\n): string {\n  // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\nexport function maxlengthFieldValidatorPIN(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessagePIN(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessagePIN(\n  fieldName: string = 'field',\n  length: number\n): string {\n  return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-maxlengthField.directive.ts","import { BehaviorSubject } from \"rxjs/Rx\";\nimport {Utils} from \"../../../framework/services/utilities/utilities\";\n\nexport class CardBalanceSharingDataService {\n  private defaultMasterData: any = {};\n  private currentMasterData: any = Object.assign({}, this.defaultMasterData);\n  private _state$ = new BehaviorSubject<any>(this.currentMasterData);\n\n  get state$() {\n    return this._state$;\n  }\n\n  resetState() {\n    this.currentMasterData = Object.assign({}, this.defaultMasterData);\n    this._state$.next(this.currentMasterData);\n  }\n\n  saveStep1Screen(step1Model: any) {\n    this.currentMasterData.step1Model = step1Model;\n  }\n\n  saveStep2Screen(step2Model: any) {\n    this.currentMasterData.step2Model = step2Model;\n  }\n  getCardNumberAtStep1() {\n    return this.currentMasterData.step1Model.cardNumber;\n  }\n\n  getCardData() {\n    if (Utils.isNotNull(this.currentMasterData.step2Model)) {\n      let cardModel = {\n        // step 1\n        cardID: this.currentMasterData.step1Model.cardNumber,\n        // step 2\n        csc: this.currentMasterData.step2Model.securityCode\n      };\n      return cardModel;\n\n    } else {\n      let cardModel = {\n        cardID: this.currentMasterData.step1Model.cardNumber,\n      };\n      return cardModel;\n    }\n  }\n\n  getCardDataOnlyCardNumber() {\n    let cardModel = {\n      // step 1\n      cardNumber: this.currentMasterData.step1Model.cardNumber,\n\n    };\n\n    return cardModel;\n  }\n\n\n  // tslint:disable-next-line:member-ordering\n  private static _instance: CardBalanceSharingDataService = new CardBalanceSharingDataService();\n  public static getInstance(): CardBalanceSharingDataService {\n    return CardBalanceSharingDataService._instance;\n  }\n\n  constructor() {\n    if (CardBalanceSharingDataService._instance) {\n      throw new Error('Error: Instantiation failed: '\n        + 'Use CardBalanceSharingDataService.getInstance() instead of new.');\n    }\n\n    CardBalanceSharingDataService._instance = this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/cardBalanceSharingData.service.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\r\n/**\r\n * @name Card IO\r\n * @description\r\n * @usage\r\n * Note: For use with iOS 10 + When building your app with the iOS 10 SDK +, you have to add some info to the info.plist file. This is due to increased security in iOS 10. Go to your app directory and search for the <your app name>Info.plist file. Add the following lines in the main <dict> element.\r\n * ```xml\r\n *<key>NSCameraUsageDescription</key>\r\n *<string>To scan credit cards.</string>\r\n *```\r\n * ```typescript\r\n * import { CardIO } from '@ionic-native/card-io';\r\n *\r\n * constructor(private cardIO: CardIO) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * this.cardIO.canScan()\r\n *   .then(\r\n *     (res: boolean) => {\r\n *       if(res){\r\n *         let options = {\r\n *           requireExpiry: true,\r\n *           requireCVV: false,\r\n *           requirePostalCode: false\r\n *         };\r\n *         CardIO.scan(options);\r\n *       }\r\n *     }\r\n *   );\r\n * ```\r\n * @interfaces\r\n * CardIOOptions\r\n * CardIOResponse\r\n */\r\nvar CardIO = (function (_super) {\r\n    __extends(CardIO, _super);\r\n    function CardIO() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Check whether card scanning is currently available. (May vary by\r\n     * device, OS version, network connectivity, etc.)\r\n     *\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    CardIO.prototype.canScan = function () {\r\n        return;\r\n    };\r\n    /**\r\n     * Scan a credit card with card.io.\r\n     * @param {CardIOOptions} [options] Options for configuring the plugin\r\n     * @returns {Promise<any>}\r\n     */\r\n    CardIO.prototype.scan = function (options) {\r\n        return;\r\n    };\r\n    /**\r\n     * Retrieve the version of the card.io library. Useful when contacting support.\r\n     * @returns {Promise<string>}\r\n     */\r\n    CardIO.prototype.version = function () {\r\n        return;\r\n    };\r\n    CardIO.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    CardIO.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], CardIO.prototype, \"canScan\", null);\r\n    __decorate([\r\n        Cordova(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], CardIO.prototype, \"scan\", null);\r\n    __decorate([\r\n        Cordova(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], CardIO.prototype, \"version\", null);\r\n    CardIO = __decorate([\r\n        Plugin({\r\n            pluginName: 'CardIO',\r\n            plugin: 'card.io.cordova.mobilesdk',\r\n            pluginRef: 'CardIO',\r\n            repo: 'https://github.com/card-io/card.io-Cordova-Plugin',\r\n            platforms: ['Android', 'iOS']\r\n        })\r\n    ], CardIO);\r\n    return CardIO;\r\n}(IonicNativePlugin));\r\nexport { CardIO };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/card-io/index.js\n// module id = 835\n// module chunks = 13 27","import { Component, ViewChildren, QueryList } from '@angular/core';\nimport {IonicPage, NavController, NavParams, TextInput} from 'ionic-angular';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CardIO} from '@ionic-native/card-io';\nimport {Utils} from \"../../../../framework/services/utilities/utilities\";\nimport {requireValidator} from \"../../../../framework/validations/validator-required.directive\";\nimport {CardBalanceSharingDataService} from \"../cardBalanceSharingData.service\";\nimport {LoadingIndicatorService} from \"../../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {ChangeBalanceStep1Service, RetrieveBalanceRequestBody} from './checkBalanceStep1.service';\nimport {RouteManagerService} from \"../../../../framework/services/routeManager/routeManager.service\";\nimport {maxlengthFieldValidator} from \"../../../../framework/validations/validator-maxlengthField.directive\";\nimport {AppConfig as app} from \"../../../../framework/appConfig\";\n\n@IonicPage()\n@Component({\n  selector: 'page-checkBalanceStep1',\n  templateUrl: 'checkBalanceStep1.html',\n  providers: [\n    CardBalanceSharingDataService,\n    ChangeBalanceStep1Service,\n    CardIO\n  ]\n})\n\nexport class CheckBalanceStep1Page {\n\n  model: any;\n  @ViewChildren(TextInput) textInputs: QueryList<TextInput>;\n\n  constructor(private formBuilder: FormBuilder,\n              public routeManager: RouteManagerService,\n              private cardIO: CardIO,\n              public navCtrl: NavController,\n              public navParams: NavParams,\n              public changeBalanceStep1Service: ChangeBalanceStep1Service) {\n    this.buildForm();\n  }\n\n  ionViewWillEnter() {\n    if (this.navParams.get('cardNumber')) {\n      let cardNumberOld = this.navParams.get('cardNumber');\n      this.checkBalanceForm.patchValue({'cardNumber': cardNumberOld + ''});\n    }\n  }\n\n  setCardData(data: any) {\n    this.checkBalanceForm.setValue({cardNumber: data.cardNumber});\n  }\n\n  scanButton() {\n    this.cardIO.canScan()\n      .then(\n        (res: boolean) => {\n          if (res) {\n            let options = {\n              requireExpiry: true\n            };\n            return this.cardIO.scan(options);\n          }\n        }\n      )\n      .then(res => {\n          this.setCardData(res);\n        }, err => {\n        }\n      );\n  }\n\n\n  submitToCheckCardBalance() {\n    let cardID = {\n      'cardID': this.checkBalanceForm.value.cardNumber\n    }\n    if (this.checkBalanceForm.valid) {\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (!res.ok) {\n            return;\n          }\n          let body = res.response;\n          this.checkNextStepNavigate(body);\n\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changeBalanceStep1Service\n        .retrieveCardType(cardID)\n        .subscribe(observer);\n    }\n  }\n\n  checkNextStepNavigate(cardInformation) {\n    if (Utils.isNotNull(cardInformation) && cardInformation.cardType !== 'FLEXECODE_2.0' && cardInformation.cardType !== 'TESCO' && cardInformation.cardType !== 'SAINSBURYS') {\n      this.navCtrl.setRoot('CheckBalanceStep2Page', {cardNumber: this.checkBalanceForm.value.cardNumber});\n    } else {\n      const data: RetrieveBalanceRequestBody = {\n        'cardID': this.checkBalanceForm.value.cardNumber\n      };\n      this.getBalanceData(data);\n    }\n  }\n\n  getBalanceData(cardInfor) {\n    if (this.checkBalanceForm.valid) {\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (!res.ok) {\n            return;\n          }\n          let balanceValue = res.response;\n          this.navCtrl.setRoot('CheckBalanceStep3Page', {\n            'balanceValue': balanceValue,\n            'cardNumber': this.checkBalanceForm.value.cardNumber\n          });\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changeBalanceStep1Service\n        .getBalanceCard(cardInfor)\n        .subscribe(observer);\n    }\n  }\n\n  checkBalanceForm: FormGroup;\n  formErrors = {\n    'cardNumber': ''\n  };\n\n  buildForm() {\n    this.checkBalanceForm = this.formBuilder.group({\n      'cardNumber': ['', [\n        requireValidator('cardNumber'),\n        maxlengthFieldValidator(19, 'Card or e-code number'),\n      ]]\n    }, {\n      validator: {\n        updateOn: 'blur'\n      }\n    });\n\n    this.checkBalanceForm.statusChanges.subscribe(() => {\n      if (this.textInputs) {\n        this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n      }\n    });\n  }\n\n\n  errorMessage(path: string) {\n    const control = this.checkBalanceForm.get(path);\n    const requiredMsg = app.Configuration.ContentMessage.required;\n    if (control.valid) {\n      return '';\n    }\n\n    if (path === 'cardNumber') {\n      if (control.hasError('required')) {\n        return control.getError('required');\n      }else {\n        if (control.hasError('maxLengthField')) {\n          return control.getError('maxLengthField')\n        }\n      }\n    }\n  }\n\n\n\n  gotoWelcome() {\n    this.navCtrl.setRoot('WelcomePage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../../framework/services/httpService/http.service\";\n\nexport interface RetrieveBalanceRequestBody {\n  'cardID': string;\n}\n\n@Injectable()\nexport class ChangeBalanceStep1Service {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  retrieveCardType(cardId): Observable<any> {\n    return this.http.postwithoutAuthorization(\"card/type\", cardId);\n  }\n\n  getBalanceCard(cardInformation): Observable<any> {\n    return this.http.postwithoutAuthorWithoutRequestType(\"card/balance-status\", cardInformation);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep1/checkBalanceStep1.service.ts"],"sourceRoot":""}