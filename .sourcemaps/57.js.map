{"version":3,"sources":["../../src/spa/+screens/AccountManagement/updatePIN/updatePIN.module.ts","../../src/spa/framework/validations/validator-pinCodeMatch.directive.ts","../../src/spa/+screens/AccountManagement/updatePIN/updatePIN.ts","../../src/spa/+screens/AccountManagement/updatePIN/updatePIN.service.ts"],"names":[],"mappings":"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","file":"57.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { UpdatePINPage } from './updatePIN';\nimport { PttPinModule } from '../../../../libs/ptt-pin/ptt-pin.module';\n\n@NgModule({\n  declarations: [UpdatePINPage],\n  imports: [\n    IonicPageModule.forChild(UpdatePINPage),\n    PttPinModule\n  ],\n  exports: [UpdatePINPage]\n})\nexport class UpdatePINPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/updatePIN/updatePIN.module.ts","import {\n    FormGroup\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nlet PIN_and_confirm_do_not_match = app.Configuration.ContentMessage.PIN_and_confirm_do_not_match;\nexport function checkMatchWith(fields: any[]) {\n    return (group: FormGroup) => {\n        fields.forEach(item => {\n            let fieldInput = group.controls[item.Field],\n            confirmationInput = group.controls[item.ConfirmField];\n            if (fieldInput.value !== confirmationInput.value) {\n                return confirmationInput.setErrors({ notEquivalent: errorMessage() })\n            }\n            else {\n                if (fieldInput.value === '' && confirmationInput.value === ''){\n                    return fieldInput.setErrors({ notEquivalent:'error' });\n                }\n                return confirmationInput.setErrors(null);\n            }\n        });\n    }\n}\n\nfunction errorMessage(): string {\n    return PIN_and_confirm_do_not_match;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-pinCodeMatch.directive.ts","import {Component, QueryList, ViewChildren} from '@angular/core';\nimport {AlertController, IonicPage, NavController, TextInput} from 'ionic-angular';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {numericValidator} from \"../../../framework/validations/validator-numeric.directive\";\nimport {UpdatePINService} from \"./updatePIN.service\";\nimport {checkMatchWith} from '../../../framework/validations/validator-pinCodeMatch.directive';\nimport {PinCodeService} from \"../../../framework/services/pinCodeService/pinCode.service\";\nimport {AuthenticationDataSharingService} from \"../../../framework/login/authenticationDataSharing.service\";\nimport {RouteManagerService} from \"../../../framework/services/routeManager/routeManager.service\";\nimport {FingerprintAIO} from '@ionic-native/fingerprint-aio';\nimport {ToastMessageService} from \"../../../framework/services/toastMessageService/toastMessage.service\";\nimport {requireValidator} from \"../../../framework/validations/validator-required.directive\";\nimport $ from 'jquery';\nimport {LoadingIndicatorService} from \"../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {AppConfig as app} from \"../../../framework/appConfig\";\n\n@IonicPage()\n@Component({\n    selector: 'page-updatePIN',\n    templateUrl: 'updatePIN.html',\n    providers: [\n        UpdatePINService\n    ]\n})\n\nexport class UpdatePINPage {\n    model: any = {};\n    confirm_pin = app.Configuration.ContentMessage.confirm_pin;\n    PIN_5_digit = app.Configuration.ContentMessage.PIN_5_digit;\n  PIN_enter_5_digit = app.Configuration.ContentMessage.PIN_enter_5_digit;\n  PIN_and_confirm_do_not_match = app.Configuration.ContentMessage.PIN_and_confirm_do_not_match;\n    @ViewChildren(TextInput) textInputs: QueryList<TextInput>;\n\n    constructor(private formBuilder: FormBuilder,\n                public alertCtrl: AlertController,\n                public routeManager: RouteManagerService,\n                private updatePINService: UpdatePINService,\n                public navCtrl: NavController,\n                public touchId: FingerprintAIO) {\n        this.buildForm();\n    }\n    updateSuccessfullMSG = '';\n\n    ionViewWillEnter() {\n        $('.app-root').addClass('not-show-tab');\n        this.getContentSuccessfull();\n    }\n\n    ionViewWillLeave() {\n        $('.app-root').removeClass('not-show-tab');\n    }\n\n\n    public updatePINCode() {\n        if (this.updatePINForm.valid) {\n            PinCodeService.getInstance()\n                .savePinCode(\n                    AuthenticationDataSharingService.getInstance().loginEmail,\n                    this.updatePINForm.value\n                );\n\n            ToastMessageService.getInstance().showToastMessage(this.updateSuccessfullMSG)\n            this.navCtrl.setRoot('SettingsPage');\n        }\n    }\n\n    public getContentSuccessfull() {\n        LoadingIndicatorService.getInstance().showLoadingIndicator();\n        const observer = {\n            next: (res) => {\n                if (!res.ok) {\n                    return;\n                }\n                let body = res.response;\n                this.updateSuccessfullMSG = body.message;\n            },\n            error: (error) => {\n                LoadingIndicatorService.getInstance().hideLoadingIndicator();\n            },\n            complete: () => {\n                LoadingIndicatorService.getInstance().hideLoadingIndicator();\n            }\n        };\n        this.updatePINService\n            .getContentFromRetreiveContent('pin-updated')\n            .subscribe(observer);\n    }\n\n\n    updateInputOnKey(event: KeyboardEvent, target) {\n        if (event.key !== 'Backspace' && target && typeof target.setFocus === 'function') {\n            if (typeof event.stopImmediatePropagation === 'function') {\n                event.stopPropagation();\n            }\n            target.setFocus();\n        }\n    }\n\n    updatePINForm: FormGroup;\n    formErrors = {\n        'pin1': '',\n        'pin2': '',\n        'pin3': '',\n        'pin4': '',\n        'pin5': '',\n        'pinConfirm1': '',\n        'pinConfirm2': '',\n        'pinConfirm3': '',\n        'pinConfirm4': '',\n        'pinConfirm5': ''\n    };\n\n    buildForm() {\n        this.updatePINForm = this.formBuilder.group({\n            'pin1': ['',\n                [requireValidator('pin1'),\n                    numericValidator()]],\n            'pin2': ['',\n                [requireValidator('pin2'),\n                    numericValidator()]],\n            'pin3': ['',\n                [requireValidator('pin3'),\n                    numericValidator()]],\n            'pin4': ['',\n                [requireValidator('pin4'),\n                    numericValidator()]],\n            'pin5': ['',\n                [requireValidator('pin5'),\n                    numericValidator()]],\n            'pinConfirm1': [''],\n            'pinConfirm2': [''],\n            'pinConfirm3': [''],\n            'pinConfirm4': [''],\n            'pinConfirm5': ['']\n        }, {\n            validator: {\n                validators: checkMatchWith([{Field: 'pin1', ConfirmField: 'pinConfirm1'},\n                    {Field: 'pin2', ConfirmField: 'pinConfirm2'},\n                    {Field: 'pin3', ConfirmField: 'pinConfirm3'},\n                    {Field: 'pin4', ConfirmField: 'pinConfirm4'},\n                    {Field: 'pin5', ConfirmField: 'pinConfirm5'}]),\n                updateOn: 'blur'\n            }\n        });\n\n        this.updatePINForm.statusChanges.subscribe(() => {\n            if (this.textInputs) {\n                this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n            }\n        });\n    }\n\n    private patchValue(controlName, value, updateState = false) {\n        const control = this.updatePINForm.get(controlName);\n        control.patchValue(value);\n        if (updateState) {\n            control.markAsTouched();\n            control.markAsDirty();\n        }\n    }\n\n    onPinChange(pin) {\n        const pin1 = pin.substr(0, 1);\n        const pin2 = pin.substr(1, 1);\n        const pin3 = pin.substr(2, 1);\n        const pin4 = pin.substr(3, 1);\n        const pin5 = pin.substr(4, 1);\n        this.patchValue('pin1', pin1, true);\n        if (pin.length > 1) {\n            this.patchValue('pin2', pin2, true);\n        } else {\n            this.patchValue('pin2', pin2);\n        }\n        if (pin.length > 2) {\n            this.patchValue('pin3', pin3, true);\n        } else {\n            this.patchValue('pin3', pin3);\n        }\n        if (pin.length > 3) {\n            this.patchValue('pin4', pin4, true);\n        } else {\n            this.patchValue('pin4', pin4);\n        }\n        if (pin.length > 4) {\n            this.patchValue('pin5', pin5, true);\n        } else {\n            this.patchValue('pin5', pin5);\n        }\n    }\n\n    onConfirmPinChange(pin) {\n        const pin1 = pin.substr(0, 1);\n        const pin2 = pin.substr(1, 1);\n        const pin3 = pin.substr(2, 1);\n        const pin4 = pin.substr(3, 1);\n        const pin5 = pin.substr(4, 1);\n        this.patchValue('pinConfirm1', pin1, true);\n        if (pin.length > 1) {\n            this.patchValue('pinConfirm2', pin2, true);\n        } else {\n            this.patchValue('pinConfirm2', pin2);\n        }\n        if (pin.length > 2) {\n            this.patchValue('pinConfirm3', pin3, true);\n        } else {\n            this.patchValue('pinConfirm3', pin3);\n        }\n        if (pin.length > 3) {\n            this.patchValue('pinConfirm4', pin4, true);\n        } else {\n            this.patchValue('pinConfirm4', pin4);\n        }\n        if (pin.length > 4) {\n            this.patchValue('pinConfirm5', pin5, true);\n        } else {\n            this.patchValue('pinConfirm5', pin5);\n        }\n    }\n\n    errorMessage(path: string) {\n        const control = this.updatePINForm.get(path);\n        const requiredMsg = app.Configuration.ContentMessage.required;\n        if (control.valid) {\n            return '';\n        }\n\n        if (path === 'pin1' || path === 'pin2' || path === 'pin3' || path === 'pin4' || path === 'pin5' || path === 'pinConfirm1') {\n            if (control.hasError('required')) {\n                return control.getError('required');\n            } else {\n                if (control.hasError('minlengthField')) {\n                    return control.getError('minlengthField')\n                }\n\n                if (control.hasError('notEquivalent')) {\n                    return control.getError('notEquivalent')\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/updatePIN/updatePIN.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class UpdatePINService {\n    constructor(private http: HttpService) {\n    }\n\n    updatePIN(): Observable<any> {\n        return this.http.get(\"account/password-policy\");\n    }\n\n    getContentFromRetreiveContent(code): Observable<any> {\n        return this.http.get('cms/message/code=' + code);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/updatePIN/updatePIN.service.ts"],"sourceRoot":""}