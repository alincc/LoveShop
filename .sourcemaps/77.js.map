{"version":3,"sources":["../../src/spa/+screens/AppInforManagement/termsConditions/termsConditions.module.ts","../../src/spa/+screens/AppInforManagement/termsConditions/termsConditions.ts","../../src/spa/+screens/AppInforManagement/termsConditions/termsConditions.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACQ;AAOxD;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QALrC,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,6EAAmB,CAAC;YACnC,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,6EAAmB,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC,6EAAmB,CAAC;SAC/B,CAAC;OACW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACTE;AACiB;AAC4D;AACpC;AAChB;AACiC;AAUlG;IAGE,6BACS,OAAsB,EACtB,aAAkC,EAClC,sBAA8C,EAC9C,IAAiB,EACjB,SAAoB;QAJpB,YAAO,GAAP,OAAO,CAAe;QACtB,kBAAa,GAAb,aAAa,CAAqB;QAClC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,SAAI,GAAJ,IAAI,CAAa;QACjB,cAAS,GAAT,SAAS,CAAW;IAE7B,CAAC;IAED,8CAAgB,GAAhB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oCAAoC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,8CAAgB,GAAhB;QAAA,iBAoBC;QAnBC,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,UAAC,GAAG;gBACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBACZ,MAAM,CAAC;gBACT,CAAC;gBACD,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;gBACxB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,CAAC;YACD,KAAK,EAAE,UAAC,KAAK;gBACX,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC/D,CAAC;YACD,QAAQ,EAAE;gBACR,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC/D,CAAC;SACF,CAAC;QACF,IAAI,CAAC,sBAAsB;aACxB,iBAAiB,EAAE;aACnB,SAAS,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAtCU,mBAAmB;QAP/B,wEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,WAAW,CAAwB;YACnC,4FAAW;aACa;WACvB;SACF,CAAC;+HAK+B;YACP,wFAAmB;YACV,kGAAsB;YACxC,kEAAW;YACN,SAAS;OARlB,mBAAmB,CAwC/B;IAAD,CAAC;AAAA;SAxCY,mBAAmB,e;;;;;;;;;;;;;;;;;;;;ACfS;AAEwC;AAGjF;IACE,gCAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAED,kDAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IACvD,CAAC;IANU,sBAAsB;QADlC,yEAAU,EAAE;yCAEe,iGAAW;OAD1B,sBAAsB,CAQlC;IAAD,6BAAC;CAAA;AARkC","file":"77.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TermsConditionsPage } from './termsConditions';\n\n@NgModule({\n  declarations: [TermsConditionsPage],\n  imports: [IonicPageModule.forChild(TermsConditionsPage)],\n  exports: [TermsConditionsPage]\n})\nexport class TermsConditionsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AppInforManagement/termsConditions/termsConditions.module.ts","import {Component} from '@angular/core';\nimport {NavController, IonicPage, NavParams} from 'ionic-angular';\nimport {LoadingIndicatorService} from \"../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\nimport {TermsConditionsService} from \"./termsConditions.service\";\nimport {RouteManagerService} from \"../../../framework/services/routeManager/routeManager.service\";\n\n@IonicPage()\n@Component({\n  selector: 'page-termsConditions',\n  templateUrl: 'termsConditions.html',\n  providers: [\n    TermsConditionsService\n  ]\n})\nexport class TermsConditionsPage {\n  textContent: any;\n\n  constructor(\n    public navCtrl: NavController,\n    public routerManager: RouteManagerService,\n    public termsConditionsService: TermsConditionsService,\n    public http: HttpService,\n    public navParams: NavParams) {\n\n  }\n\n  ionViewWillEnter() {\n    if (this.routerManager.ifNotLoggedInThenGoBackToLoginScreen() === false) {\n      this.getTermCondition();\n    }\n  }\n\n  getTermCondition() {\n    LoadingIndicatorService.getInstance().showLoadingIndicator();\n    const observer = {\n      next: (res) => {\n        if (!res.ok) {\n          return;\n        }\n        let body = res.response;\n        this.textContent = body.content;\n      },\n      error: (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      },\n      complete: () => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      }\n    };\n    this.termsConditionsService\n      .getTermConditions()\n      .subscribe(observer);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AppInforManagement/termsConditions/termsConditions.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class TermsConditionsService {\n  constructor(private http: HttpService) {\n  }\n\n  getTermConditions(): Observable<any> {\n    return this.http.get(\"cms/message/code=app.l2s.tcs\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AppInforManagement/termsConditions/termsConditions.service.ts"],"sourceRoot":""}