{"version":3,"sources":["../../src/spa/+screens/AccountManagement/register/registerStep2/registerStep2.module.ts","../../src/spa/framework/validations/validator-maxlengthField.directive.ts","../../src/spa/framework/validations/validator-minlengthField.directive.ts","../../src/spa/framework/validations/validator-email.directive.ts","../../src/spa/+screens/AccountManagement/register/registerData.service.ts","../../src/spa/+screens/AccountManagement/register/registerSharingData.service.ts","../../src/spa/framework/validations/validator-emailMatch.directive.ts","../../src/spa/framework/validations/validator-password.directive.ts","../../src/spa/+screens/AccountManagement/register/registerStep2/registerStep2.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterStep2Page } from './registerStep2';\nimport {SharedModule} from \"../../../../shared/shared.module\";\n\n@NgModule({\n  declarations: [RegisterStep2Page],\n  imports: [IonicPageModule.forChild(RegisterStep2Page), SharedModule],\n  exports: [RegisterStep2Page]\n})\nexport class RegisterStep2PageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/register/registerStep2/registerStep2.module.ts","import {\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function maxlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no more than ${length} characters in length.`;\n}\n\nexport function maxlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\nexport function maxlengthFieldValidatorExtraCard(\n    length: number,\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = parseInt(control.value);\n        if (input !== null && typeof input !== 'undefined') {\n            return (input > length)\n                ? { maxLengthField: errorMessageExtraCard(length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessageExtraCard(\n    length\n): string {\n    return `Maximum ${length} extra gift cards.`;\n}\n\nexport function maxlengthFieldValidatorCSC(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessageCSC(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessageCSC(\n  fieldName: string = 'field',\n  length: number\n): string {\n  // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\nexport function maxlengthFieldValidatorPIN(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessagePIN(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessagePIN(\n  fieldName: string = 'field',\n  length: number\n): string {\n  return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-maxlengthField.directive.ts","import {\n    Directive,\n    Input,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\n\nimport {\n    NG_VALIDATORS,\n    Validators,\n    Validator,\n    ValidatorFn,\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function minlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no less than ${length} characters in length.`;\n}\n\nexport function minlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\n\n@Directive({\n    selector: '[minlengthField]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: MinlengthFieldValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class MinlengthFieldValidatorDirective implements Validator, OnChanges {\n    @Input() minlengthField: string;\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes['minlengthField'];\n        if (change) {\n            this.valFn = minlengthFieldValidator(parseInt(change.currentValue, 0));\n        } else {\n            this.valFn = Validators.nullValidator;\n        }\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-minlengthField.directive.ts","import { Directive } from '@angular/core';\nimport {\n    AbstractControl,\n    NG_VALIDATORS,\n    ValidatorFn,\n    Validators,\n    Validator\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function emailValidator() {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n        if (!emailRegex.test(control.value))\n        {\n            return { email: errorMessage() }\n        }   \n        \n        return null;\n    };\n}\n\nfunction errorMessage() {\n    return app.Configuration.ContentMessage.email_invalid_email;\n}\n\n\n@Directive({\n    selector: '[isEmail]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: EmailValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class EmailValidatorDirective implements Validator {\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() {\n        this.valFn = emailValidator();\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-email.directive.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class RegisterDataService {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  getPasswordValidationRules(): Observable<any> {\n    return this.http.get(\"account/password-policy\");\n  }\n\n  validateEmailAddress(email: string): Observable<any> {\n    return this.http.post(\"account/email\", email);\n  }\n\n  searchPostcodeAutoComplete(url: string): Observable<any> {\n    return this.http.getExternal(url);\n  }\n\n  lookUpAddress(url: string): Observable<any> {\n    return this.http.getExternal(url);\n  }\n\n  createAccount(userData): Observable<any> {\n    return this.http.post(\"account\", userData);\n  }\n\n    getContentFromRetreiveContent(code): Observable<any> {\n        return this.http.get('cms/message/code=' + code);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/register/registerData.service.ts","import { BehaviorSubject } from \"rxjs/Rx\";\n\nexport class RegisterSharingDataService {\n  private defaultMasterData: any = {};\n  private currentMasterData: any = Object.assign({}, this.defaultMasterData);\n  private _state$ = new BehaviorSubject<any>(this.currentMasterData);\n\n  get state$() {\n    return this._state$;\n  }\n\n  resetState() {\n    this.currentMasterData = Object.assign({}, this.defaultMasterData);\n    this._state$.next(this.currentMasterData);\n  }\n\n  saveStep1Screen(step1Model: any) {\n    this.currentMasterData.step1Model = step1Model;\n  }\n\n  saveStep2Screen(step2Model: any) {\n    this.currentMasterData.step2Model = step2Model;\n  }\n  getEmailAddressAtStep3() {\n    return this.currentMasterData.step2Model.emailAddress;\n  }\n\n  saveStep3Screen(step3Model: any) {\n    this.currentMasterData.step3Model = step3Model;\n  }\n\n  saveStep4Screen(step4Model: any) {\n    this.currentMasterData.step4Model = step4Model;\n  }\n\n  getRegisterData() {\n    let registerModel = {\n      // step 1\n      title: this.currentMasterData.step1Model.title,\n      firstName: this.currentMasterData.step1Model.firstName,\n      lastName: this.currentMasterData.step1Model.lastName,\n      dob: this.currentMasterData.step1Model.dob,\n      termsAgreed: this.currentMasterData.step1Model.termsAgreed,\n\n      // step 2\n      emailAddress: this.currentMasterData.step2Model.emailAddress,\n      password: this.currentMasterData.step2Model.password,\n      marketingOptOut: this.currentMasterData.step2Model.marketingOptOut,\n      // step 3\n      addressLine1: this.currentMasterData.step3Model.addressLine1,\n      addressLine2: this.currentMasterData.step3Model.addressLine2,\n      country: this.currentMasterData.step3Model.country,\n      county: this.currentMasterData.step3Model.county,\n      postcode: this.currentMasterData.step3Model.postcode,\n      telephoneNumber: this.currentMasterData.step3Model.telephoneNumber,\n      town: this.currentMasterData.step3Model.town,\n      accountType:  \"B2C\",\n      businessName:  \"\"\n\n    };\n\n    return registerModel;\n  }\n\n\n  // tslint:disable-next-line:member-ordering\n  private static _instance: RegisterSharingDataService = new RegisterSharingDataService();\n  public static getInstance(): RegisterSharingDataService {\n    return RegisterSharingDataService._instance;\n  }\n\n  constructor() {\n    if (RegisterSharingDataService._instance) {\n      throw new Error('Error: Instantiation failed: '\n        + 'Use RegisterSharingDataService.getInstance() instead of new.');\n    }\n\n    RegisterSharingDataService._instance = this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/register/registerSharingData.service.ts","import {\n  FormGroup\n} from '@angular/forms';\nimport { Utils } from \"../services/utilities/utilities\";\n\nexport function checkMatchWith(\n  field: string,\n  confirmField: string,\n  fieldName: string = 'Password',\n  confirmFieldName: string = 'confirmation password') {\n  return (group: FormGroup) => {\n    let fieldInput = group.controls[field],\n        confirmationInput = group.controls[confirmField];\n    if (\n      fieldInput &&\n      confirmationInput &&\n      Utils.isNotNull(fieldInput.value) &&\n      Utils.isNotNull(confirmationInput.value) &&\n      fieldInput.value.toLowerCase() !== confirmationInput.value.toLowerCase()) {\n      return confirmationInput.setErrors({ notEquivalent: errorMessage(fieldName, confirmFieldName) })\n    }\n    else {\n      return confirmationInput.setErrors(null);\n    }\n  }\n}\n\nfunction errorMessage( fieldName, confrimFieldName): string {\n  return `${fieldName} and ${confrimFieldName} do not match.`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-emailMatch.directive.ts","import {\r\n    Directive\r\n} from '@angular/core';\r\n\r\nimport {\r\n    NG_VALIDATORS,\r\n    Validator,\r\n    AbstractControl,\r\n    Validators,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\nimport {AppConfig as app} from \"../appConfig\";\r\nlet errorMessage = {\r\n    'passwordInvalid': app.Configuration.ContentMessage.password_invalid_characters\r\n};\r\n\r\nexport function passwordValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n        const passwordInput = control.value;\r\n        let message = errorMessage.passwordInvalid;\r\n        let regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@!%*#?&.,Â£()=+\"])[\\w$@!%*#?&.,Â£()=+\"]{8,}$/;\r\n        \r\n        let passwordPolicy = localStorage.getItem('password-policy');\r\n        if(passwordPolicy){\r\n           try {\r\n               let policyStr = passwordPolicy;\r\n               let policy = JSON.parse(policyStr);\r\n           } catch (e) {\r\n           }\r\n        }    \r\n        var error = regex.test(passwordInput) ? null : { passwordInvalid: message };\r\n        return error;\r\n    };\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: '[validatorPassword]',\r\n    providers: [\r\n        {\r\n            provide: NG_VALIDATORS,\r\n            useExisting: ValidatorPasswordDirective,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\n\r\nexport class ValidatorPasswordDirective implements Validator {\r\n    private valFn = Validators.nullValidator;\r\n    constructor() {\r\n        this.valFn = passwordValidator();\r\n    }\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } {\r\n        return this.valFn(control);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-password.directive.ts","import { RegisterDataService } from './../registerData.service';\nimport { Component, ViewChildren, QueryList } from '@angular/core';\nimport { IonicPage, AlertController, Keyboard, NavController, TextInput } from 'ionic-angular';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { requireValidator } from \"../../../../framework/validations/validator-required.directive\";\nimport { checkMatchWith } from '../../../../framework/validations/validator-emailMatch.directive';\nimport { Utils } from \"../../../../framework/services/utilities/utilities\";\nimport { RegisterSharingDataService } from \"../registerSharingData.service\";\nimport { LoadingIndicatorService } from \"../../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport { ToastMessageService } from \"../../../../framework/services/toastMessageService/toastMessage.service\";\nimport { emailValidator } from \"../../../../framework/validations/validator-email.directive\";\nimport { passwordValidator } from \"../../../../framework/validations/validator-password.directive\";\nimport { minlengthFieldValidator } from \"../../../../framework/validations/validator-minlengthField.directive\";\nimport { RouteManagerService } from \"../../../../framework/services/routeManager/routeManager.service\";\nimport $ from 'jquery';\nimport {maxlengthFieldValidator} from \"../../../../framework/validations/validator-maxlengthField.directive\";\nimport { AppConfig as app } from '../../../../framework/appConfig';\n\n@IonicPage()\n@Component({\n  selector: 'page-registerStep2',\n  templateUrl: 'registerStep2.html',\n  providers: [\n    RegisterDataService\n  ]\n})\n\nexport class RegisterStep2Page {\n  passwordValidationRules: any = {};\n  inputType: string = 'password';\n  visiblePassword: boolean = false;\n  marketingOptOut: boolean = true;\n  @ViewChildren(TextInput) textInputs: QueryList<TextInput>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public alertCtrl: AlertController,\n    public routeManager: RouteManagerService,\n    public keyboard: Keyboard,\n    public navCtrl: NavController,\n    private registerDataService: RegisterDataService\n  ) {\n    this.buildForm();\n    $(document).ready(() => {\n      $('input').keypress((e) => {\n        var code = (e.keyCode ? e.keyCode : e.which);\n        if ((code == 13) || (code == 10)) {\n          $(this).blur();\n          this.keyboard.close();\n          return false;\n        }\n      });\n    });\n  }\n\n  registerUserForm: FormGroup;\n  formErrors = {\n    'emailAddress': '',\n    'confirmEmailAddress': '',\n    'password': ''\n  };\n\n  updateSuccessFullMSG= '';\n  account_login_details = app.Configuration.ContentMessage.account_login_details;\n  marketing_opt_out = app.Configuration.ContentMessage.marketing_opt_out;\n  please_enter_your_email_and_password_below_which_will_be_used_to_login_to_your_account_in_the_future =\n    app.Configuration.ContentMessage.please_enter_your_email_and_password_below_which_will_be_used_to_login_to_your_account_in_the_future;\n\n  ionViewWillEnter() {\n    this.getContentSuccessfull();\n  }\n  public buildForm() {\n    this.registerUserForm = this.formBuilder.group({\n      'emailAddress': ['', [\n        requireValidator('E-mail address'),\n        minlengthFieldValidator(6, 'Email'),\n        maxlengthFieldValidator(81, 'Email'),\n        emailValidator()\n      ]],\n      'confirmEmailAddress': ['', [\n        requireValidator('Email'),\n        minlengthFieldValidator(6, 'Email'),\n        maxlengthFieldValidator(81, 'Email'),\n        emailValidator()\n      ]],\n      'password': ['', [\n        requireValidator('Password'),\n        passwordValidator()\n      ]],\n      'marketingOptOut': ['']\n    },\n      {\n        validator: {\n          validators: checkMatchWith('emailAddress', 'confirmEmailAddress', 'Email', 'confirmation email'),\n          updateOn: 'blur'\n        }\n      });\n\n    this.registerUserForm.statusChanges.subscribe(() => {\n      if (this.textInputs) {\n        this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n      }\n    });\n\n    RegisterSharingDataService.getInstance().state$.subscribe(\n      (res) => {\n        if (Utils.isNotNull(res.step2Model)) {\n          this.registerUserForm.setValue(res.step2Model);\n          this.marketingOptOut = res.step2Model.marketingOptOut;\n        }\n      }\n    );\n  }\n\n  errorMessage(path: string) {\n    const control = this.registerUserForm.get(path);\n    const requiredMsg = app.Configuration.ContentMessage.required;\n    if (control.valid) {\n      return '';\n    }\n\n    if (path === 'emailAddress' || path === 'confirmEmailAddress' || path === 'password') {\n      if (control.hasError('required')) {\n        return control.getError('required');\n      } else {\n\n\n        if (control.hasError('minlengthField')) {\n          return control.getError('minlengthField')\n        }\n\n        if (control.hasError('maxLengthField')) {\n          return control.getError('maxLengthField')\n        }\n\n        if (control.hasError('email')) {\n          return control.getError('email')\n        }\n\n        if (control.hasError('notEquivalent')) {\n          return control.getError('notEquivalent')\n        }\n\n        if (control.hasError('passwordInvalid')) {\n          return control.getError('passwordInvalid')\n        }\n      }\n    }\n  }\n\n\n    public getContentSuccessfull() {\n        LoadingIndicatorService.getInstance().showLoadingIndicator();\n        const observer = {\n            next: (res) => {\n                if (!res.ok) {\n                    return;\n                }\n                let body = res.response;\n                this.updateSuccessFullMSG = body.message;\n            },\n            error: (error) => {\n                LoadingIndicatorService.getInstance().hideLoadingIndicator();\n            },\n            complete: () => {\n                LoadingIndicatorService.getInstance().hideLoadingIndicator();\n            }\n        };\n        this.registerDataService\n            .getContentFromRetreiveContent('email-already-in-use')\n            .subscribe(observer);\n    }\n\n\n  public showPassword() {\n    this.visiblePassword = !this.visiblePassword;\n    if (this.visiblePassword) {\n      this.inputType = 'text';\n    } else {\n      this.inputType = 'password';\n    }\n  }\n\n  public showAlertPasswordInfo() {\n    if (!this.passwordValidationRules.message) {\n      let passwordPolicy = localStorage.getItem('password-policy');\n      if (passwordPolicy) {\n        let policy = JSON.parse(passwordPolicy);\n        this.passwordValidationRules = {\n          'message': policy.passwordPolicyFriendlyMessage\n        };\n      }\n    }\n\n    let alert = this.alertCtrl.create({\n      title: app.Configuration.RegisterStep2Page.AlertPasswordTitle,\n      message: this.passwordValidationRules.message,\n      cssClass: \"l2s-alert--default l2s-alert--centered l2s-password-alert\",\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n\n  public submitRegisterData() {\n    if (this.registerUserForm.valid) {\n      this.registerUserForm.value.marketingOptOut = this.marketingOptOut;\n      RegisterSharingDataService.getInstance().saveStep2Screen(this.registerUserForm.value);\n      let submitEmail: any = {\n        emailAddress: this.registerUserForm.value.emailAddress\n      };\n\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      this.registerDataService\n        .validateEmailAddress(submitEmail)\n        .subscribe(res => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (res.status === 200) {\n            if (res.response && res.response.validEmailAddress === true) {\n              this.navCtrl.push('RegisterStep3Page');\n            } else {\n              ToastMessageService.getInstance().showToastMessage( this.updateSuccessFullMSG);\n            }\n          } else if (res.status > 4) {\n            try {\n              let errors = res.json().errors;\n\n              if (errors.length > 0) {\n                let emailErrorMsg = \"\";\n                for (let error of errors) {\n                  emailErrorMsg += error.message + \"<br>\";\n                }\n\n                let emailErrorTitle = \"Email Invalid:\";\n                let alert = this.alertCtrl.create({\n                  title: emailErrorTitle,\n                  message: emailErrorMsg,\n                  buttons: ['OK']\n                });\n\n                alert.present();\n              }\n            } catch(e) {}\n          }\n        },\n        error => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/register/registerStep2/registerStep2.ts"],"sourceRoot":""}