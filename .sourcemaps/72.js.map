{"version":3,"sources":["../../src/spa/+screens/CardManagement/changePaymentMethods/changePaymentMethods.module.ts","../../src/spa/+screens/CardManagement/changePaymentMethods/changePaymentMethods.ts","../../src/spa/+screens/CardManagement/changePaymentMethods/paymentMethod.services.ts"],"names":[],"mappings":"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","file":"72.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePaymentMethodsPage } from './changePaymentMethods';\n\n@NgModule({\n  declarations: [ChangePaymentMethodsPage],\n  imports: [IonicPageModule.forChild(ChangePaymentMethodsPage)],\n  exports: [ChangePaymentMethodsPage]\n})\nexport class ChangePaymentMethodsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/changePaymentMethods/changePaymentMethods.module.ts","import { Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController } from 'ionic-angular';\nimport { PaymentMethodService } from \"./paymentMethod.services\";\nimport { LoadingIndicatorService } from \"../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport { ToastMessageService } from \"../../../framework/services/toastMessageService/toastMessage.service\";\nimport { Utils } from \"../../../framework/services/utilities/utilities\";\nimport $ from 'jquery';\nimport {AppConfig as app} from \"../../../framework/appConfig\";\n\n@IonicPage()\n@Component({\n  selector: 'page-changePaymentMethods',\n  templateUrl: 'changePaymentMethods.html',\n  providers: [\n    PaymentMethodService,\n  ]\n})\nexport class ChangePaymentMethodsPage {\n\n  _getListPaymentMethod;\n  _updateDefaut;\n  _removeCard;\n  listCards: any = [];\n  alertRef;\n  loadingCompleted = false;\n  account_management_no_cards_available= app.Configuration.ContentMessage.account_management_no_cards_available;\n  account_management_set_default_card= app.Configuration.ContentMessage.account_management_set_default_card;\n\n  constructor(private paymentMethodService: PaymentMethodService,\n    public navCtrl: NavController,\n    public alertCtrl: AlertController, ) {\n  }\n\n  ionViewWillEnter() {\n    $('.app-root').addClass('not-show-tab');\n    this.resetData();\n    this.getPaymentMethods();\n  }\n\n  ionViewWillLeave() {\n    $('.app-root').removeClass('not-show-tab');\n  }\n  resetData() {\n    this.loadingCompleted = false;\n  }\n\n  getPaymentMethods() {\n    LoadingIndicatorService.getInstance().showLoadingIndicator();\n    this._getListPaymentMethod = this.paymentMethodService.getListPaymentMethod()\n      .subscribe((res) => {\n        if (!res.ok) {\n          return;\n        }\n        let body = res.response;\n\n        if (Utils.isNotNull(body)) {\n          this.listCards = body.tokenizedCards;\n        }\n      }, (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      }, () => {\n        this.loadingCompleted = true;\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      });\n  }\n\n  removeCardExecute(index) {\n    let body = {\n      'token': this.listCards[index].token,\n      'expiryDate': this.listCards[index].expiryDate,\n    }\n    LoadingIndicatorService.getInstance().showLoadingIndicator();\n    this._removeCard = this.paymentMethodService.removeTokenizedCard(body)\n      .subscribe((res) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        if (!res.ok) {\n          return;\n        }\n        let body = res.response;\n\n        if (Utils.isNotNull(body)) {\n          this.listCards = body.tokenizedCards;\n        }\n      }, (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      });\n  }\n\n  removeCard(index) {\n    let alert = this.alertCtrl.create({\n      title: '',\n      message: app.Configuration.ContentMessage.confirm_removal,\n      cssClass: 'l2s-alert--flat l2s-alert--twobutton',\n      buttons: [\n        {\n          text: 'Yes',\n          cssClass: 'main-button',\n          handler: () => {\n            this.removeCardExecute(index);\n          }\n        },\n        {\n          text: 'No',\n          cssClass: 'cancel-button',\n          handler: () => {\n          }\n        },{\n          text: '',\n          cssClass: 'close-button icon icon-ios ion-ios-close',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    this.alertRef = alert;\n    alert.present();\n  }\n\n  updateCardToken(index) {\n    let body = {\n      'token': this.listCards[index].token,\n      'expiryDate': this.listCards[index].expiryDate,\n    }\n    LoadingIndicatorService.getInstance().showLoadingIndicator();\n    this.loadingCompleted = false;\n    this._updateDefaut = this.paymentMethodService.updateTokenizedCard(body)\n      .subscribe((res) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        if (!res.ok) {\n          return;\n        }\n        let body = res.response;\n        if (Utils.isNotNull(body)) {\n          this.listCards = body.tokenizedCards;\n        }\n      }, (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      }, () => {\n        this.loadingCompleted = true;\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/changePaymentMethods/changePaymentMethods.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class PaymentMethodService {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  getListPaymentMethod(): Observable<any> {\n    return this.http.get(\"account/payment-methods\");\n  }\n\n  removeTokenizedCard(body): Observable<any> {\n    return this.http.delete(\"account/payment-methods\", body);\n  }\n\n  updateTokenizedCard(body): Observable<any> {\n    return this.http.put(\"account/payment-methods\", body);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/changePaymentMethods/paymentMethod.services.ts"],"sourceRoot":""}