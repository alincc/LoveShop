{"version":3,"sources":["../../src/spa/+screens/AccountManagement/changeEmail/changeEmail.module.ts","../../src/spa/framework/validations/validator-maxlengthField.directive.ts","../../src/spa/framework/validations/validator-minlengthField.directive.ts","../../src/spa/framework/validations/validator-email.directive.ts","../../src/spa/framework/validations/validator-emailMatch.directive.ts","../../src/spa/+screens/AccountManagement/changeEmail/changeEmail.ts","../../src/spa/+screens/AccountManagement/changeEmail/changeEmail.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACA;AACW;AAO3D;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QALjC,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qEAAe,CAAC;YAC/B,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,qEAAe,CAAC,EAAE,2EAAY,CAAC;YAClE,OAAO,EAAE,CAAC,qEAAe,CAAC;SAC3B,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;ACPY;AAExC,iCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACnD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,sBACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAI,SAAS,6BAAwB,MAAM,2BAAwB,CAAC;AAC9E,CAAC;AAEK,yCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBAC3D,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,8BACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,yBAAyB,CAAC;AACtE,CAAC;AAGK,0CACF,MAAc;IAEd,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;kBACjB,EAAE,cAAc,EAAE,qBAAqB,CAAC,MAAM,CAAC,EAAE;kBACjD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,+BACI,MAAM;IAEN,MAAM,CAAC,aAAW,MAAM,uBAAoB,CAAC;AACjD,CAAC;AAEK,oCACJ,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAE,cAAc,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACtD,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,yBACE,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,kDAAkD;IAChD,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,qBAAqB,CAAC;AAClE,CAAC;AAEK,oCACJ,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAE,cAAc,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACtD,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,yBACE,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAAC;AACvD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACjHsB;AAQC;AACsB;AACxC,iCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACnD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,sBACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAI,SAAS,6BAAwB,MAAM,2BAAwB,CAAC;AAC9E,CAAC;AAEK,yCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBAC3D,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,8BACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,yBAAyB,CAAC;AACtE,CAAC;AAaD;IAGI;QADA,UAAK,GAAgB,kEAAU,CAAC,aAAa,CAAC;IAC9B,CAAC;yCAHR,gCAAgC;IAKzC,sDAAW,GAAX,UAAY,OAAsB;QAC9B,IAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG,kEAAU,CAAC,aAAa,CAAC;QAC1C,CAAC;IACL,CAAC;IAED,mDAAQ,GAAR,UAAS,OAAwB;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAfQ;QAAR,oEAAK,EAAE;;4EAAwB;IADvB,gCAAgC;QAT5C,wEAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE,CAAC;oBACR,OAAO,EAAE,qEAAa;oBACtB,WAAW,EAAE,kCAAgC;oBAC7C,KAAK,EAAE,IAAI;iBACd,CAAC;SACL,CAAC;;OAEW,gCAAgC,CAkB5C;IAAD,uCAAC;;CAAA;AAlB4C;;;;;;;;;;;;;;;;;;;;;;;ACxEH;AAOlB;AACsB;AACxC;IACF,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,UAAU,GAAG,4DAA4D,CAAC;QAChF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;YACG,MAAM,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE;QACpC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED;IACI,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC;AAChE,CAAC;AAYD;IAEI;QADA,UAAK,GAAgB,kEAAU,CAAC,aAAa,CAAC;QAE1C,IAAI,CAAC,KAAK,GAAG,cAAc,EAAE,CAAC;IAClC,CAAC;gCAJQ,uBAAuB;IAMhC,0CAAQ,GAAR,UAAS,OAAwB;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IARQ,uBAAuB;QATnC,wEAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,CAAC;oBACR,OAAO,EAAE,qEAAa;oBACtB,WAAW,EAAE,yBAAuB;oBACpC,KAAK,EAAE,IAAI;iBACd,CAAC;SACL,CAAC;;OAEW,uBAAuB,CASnC;IAAD,8BAAC;;CAAA;AATmC;;;;;;;;;;;AChCoB;AAElD,wBACJ,KAAa,EACb,YAAoB,EACpB,SAA8B,EAC9B,gBAAkD;IADlD,kDAA8B;IAC9B,6EAAkD;IAClD,MAAM,CAAC,UAAC,KAAgB;QACtB,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAClC,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrD,EAAE,CAAC,CACD,UAAU;YACV,iBAAiB;YACjB,4EAAK,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC;YACjC,4EAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC;YACxC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,iBAAiB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,YAAY,CAAC,SAAS,EAAE,gBAAgB,CAAC,EAAE,CAAC;QAClG,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;AACH,CAAC;AAED,sBAAuB,SAAS,EAAE,gBAAgB;IAChD,MAAM,CAAI,SAAS,aAAQ,gBAAgB,mBAAgB,CAAC;AAC9D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BgE;AACS;AACpB;AACG;AACiD;AACb;AACA;AACL;AACoB;AACS;AACnB;AACpB;AACoB;AAC3C;AAChC;AACmF;AAC5C;AAa9D;IAKE,yBAAoB,WAAwB,EACzB,aAAkC,EAClC,SAA0B,EACzB,iBAAoC,EACpC,WAAyC,EAC1C,OAAsB,EACrB,MAAkB,EAClB,kBAAsC;QAPtC,gBAAW,GAAX,WAAW,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAqB;QAClC,cAAS,GAAT,SAAS,CAAiB;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAA8B;QAC1C,YAAO,GAAP,OAAO,CAAe;QACrB,WAAM,GAAN,MAAM,CAAY;QAClB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAX1D,UAAK,GAAQ,EAAE,CAAC;QAChB,kBAAa,GAAG,wEAAG,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa,CAAC;QA4B/D,eAAU,GAAG;YACX,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAE,EAAE;YACrB,UAAU,EAAE,EAAE;SACf,CAAC;QArBA,IAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,4HAAgC,CAAC,WAAW,EAAE,CAAC,UAAU;SACxE;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,0CAAgB,GAAhB;QACE,+CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oCAAoC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAED,0CAAgB,GAAhB;QACE,+CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC;IASD,mCAAS,GAAT;QAAA,iBA6BC;QA5BC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,UAAU,EAAE,CAAC,EAAE,EAAE;oBACf,qHAAgB,CAAC,UAAU,CAAC;oBAC5B,kIAAuB,CAAC,CAAC,EAAE,OAAO,CAAC;oBACnC,mIAAuB,CAAC,EAAE,EAAE,OAAO,CAAC;oBACpC,gHAAc,EAAE;iBACjB,CAAC;YACF,iBAAiB,EAAE,CAAC,EAAE,EAAE;oBACtB,qHAAgB,CAAC,iBAAiB,CAAC;oBACnC,mIAAuB,CAAC,EAAE,EAAE,OAAO,CAAC;iBACrC,CAAC;YACF,UAAU,EAAE,CAAC,EAAE,EAAE;oBACf,qHAAgB,CAAC,UAAU,CAAC;iBAC7B,CAAC;SACH,EACD;YACE,SAAS,EAAE;gBACT,UAAU,EAAE,qHAAc,CAAC,UAAU,EAAE,iBAAiB,EAAE,OAAO,EAAE,oBAAoB,CAAC;gBACxF,QAAQ,EAAE,MAAM;aACjB;SACF,CACF,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC;YAC3C,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,eAAK,IAAI,YAAK,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,EAAE,EAArD,CAAqD,CAAC,CAAC;YAC1F,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAY,GAAZ,UAAa,IAAY;QACvB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAM,WAAW,GAAG,wEAAG,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,iBAAiB,IAAI,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC7E,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACtC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC;gBAC3C,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC;gBAC3C,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAClC,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAC1C,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAEM,4CAAkB,GAAzB;QAAA,iBAgCC;QA9BC,IAAI,gBAAgB,GAAG;YACrB,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ;YACtD,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ;SAChD;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/B,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC7D,IAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,UAAC,GAAG;oBACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC;oBACT,CAAC;oBACD,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;yBAC5B,SAAS,CAAC,aAAG;oBACd,CAAC,CAAC,CAAC;oBACL,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAG1B,KAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBACD,KAAK,EAAE,UAAC,KAAK;oBACX,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;gBAC/D,CAAC;gBACD,QAAQ,EAAE;oBACR,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;gBAC/D,CAAC;aACF,CAAC;YACF,IAAI,CAAC,kBAAkB;iBACpB,WAAW,CAAC,gBAAgB,CAAC;iBAC7B,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IA9HwB;QAAxB,4EAAY,CAAC,gEAAS,CAAC;kCAAa,gEAAS;uDAAY;IAH/C,eAAe;QAT3B,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,WAAW,CAAoB;YAC/B,oFAAW;gBACT,gGAAkB;gBAClB,mHAAiB;aACW;WAC7B;SACF,CAAC;gIAM4C;YACV,uEAAmB;YACvB,+FAAe;YACN,mHAAiB;YACvB,qEAA4B;YACjC,yEAAa;YACb,gFAAU;YACE,YAAkB;OAZ/C,eAAe,CAmI3B;IAAD,CAAC;AAAA;SAnIY,eAAe,e;;;;;;;;;;;;;;;;;;;;AC7Be;AAEsC;AAGjF;IACE,4BACU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAE3B,CAAC;IAED,wCAAW,GAAX,UAAY,KAAK;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IARU,kBAAkB;QAD9B,yEAAU,EAAE;yCAGK,iGAAW;OAFhB,kBAAkB,CAU9B;IAAD,yBAAC;CAAA;AAV8B","file":"18.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangeEmailPage } from './changeEmail';\nimport {SharedModule} from \"../../../shared/shared.module\";\n\n@NgModule({\n  declarations: [ChangeEmailPage],\n  imports: [IonicPageModule.forChild(ChangeEmailPage), SharedModule],\n  exports: [ChangeEmailPage]\n})\nexport class ChangeEmailPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changeEmail/changeEmail.module.ts","import {\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function maxlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no more than ${length} characters in length.`;\n}\n\nexport function maxlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\nexport function maxlengthFieldValidatorExtraCard(\n    length: number,\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = parseInt(control.value);\n        if (input !== null && typeof input !== 'undefined') {\n            return (input > length)\n                ? { maxLengthField: errorMessageExtraCard(length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessageExtraCard(\n    length\n): string {\n    return `Maximum ${length} extra gift cards.`;\n}\n\nexport function maxlengthFieldValidatorCSC(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessageCSC(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessageCSC(\n  fieldName: string = 'field',\n  length: number\n): string {\n  // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\nexport function maxlengthFieldValidatorPIN(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessagePIN(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessagePIN(\n  fieldName: string = 'field',\n  length: number\n): string {\n  return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-maxlengthField.directive.ts","import {\n    Directive,\n    Input,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\n\nimport {\n    NG_VALIDATORS,\n    Validators,\n    Validator,\n    ValidatorFn,\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function minlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no less than ${length} characters in length.`;\n}\n\nexport function minlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\n\n@Directive({\n    selector: '[minlengthField]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: MinlengthFieldValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class MinlengthFieldValidatorDirective implements Validator, OnChanges {\n    @Input() minlengthField: string;\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes['minlengthField'];\n        if (change) {\n            this.valFn = minlengthFieldValidator(parseInt(change.currentValue, 0));\n        } else {\n            this.valFn = Validators.nullValidator;\n        }\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-minlengthField.directive.ts","import { Directive } from '@angular/core';\nimport {\n    AbstractControl,\n    NG_VALIDATORS,\n    ValidatorFn,\n    Validators,\n    Validator\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function emailValidator() {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n        if (!emailRegex.test(control.value))\n        {\n            return { email: errorMessage() }\n        }   \n        \n        return null;\n    };\n}\n\nfunction errorMessage() {\n    return app.Configuration.ContentMessage.email_invalid_email;\n}\n\n\n@Directive({\n    selector: '[isEmail]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: EmailValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class EmailValidatorDirective implements Validator {\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() {\n        this.valFn = emailValidator();\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-email.directive.ts","import {\n  FormGroup\n} from '@angular/forms';\nimport { Utils } from \"../services/utilities/utilities\";\n\nexport function checkMatchWith(\n  field: string,\n  confirmField: string,\n  fieldName: string = 'Password',\n  confirmFieldName: string = 'confirmation password') {\n  return (group: FormGroup) => {\n    let fieldInput = group.controls[field],\n        confirmationInput = group.controls[confirmField];\n    if (\n      fieldInput &&\n      confirmationInput &&\n      Utils.isNotNull(fieldInput.value) &&\n      Utils.isNotNull(confirmationInput.value) &&\n      fieldInput.value.toLowerCase() !== confirmationInput.value.toLowerCase()) {\n      return confirmationInput.setErrors({ notEquivalent: errorMessage(fieldName, confirmFieldName) })\n    }\n    else {\n      return confirmationInput.setErrors(null);\n    }\n  }\n}\n\nfunction errorMessage( fieldName, confrimFieldName): string {\n  return `${fieldName} and ${confrimFieldName} do not match.`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-emailMatch.directive.ts","import {Component, ViewChildren, QueryList} from '@angular/core';\nimport {AlertController, IonicPage, NavController, TextInput} from 'ionic-angular';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ChangeEmailService} from './changeEmail.service';\nimport {minlengthFieldValidator} from \"../../../framework/validations/validator-minlengthField.directive\";\nimport {requireValidator} from \"../../../framework/validations/validator-required.directive\";\nimport {checkMatchWith} from '../../../framework/validations/validator-emailMatch.directive';\nimport {emailValidator} from \"../../../framework/validations/validator-email.directive\";\nimport {AuthenticationDataSharingService} from \"../../../framework/login/authenticationDataSharing.service\";\nimport {LoadingIndicatorService} from \"../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {RouteManagerService} from \"../../../framework/services/routeManager/routeManager.service\";\nimport {LogoutDataService} from \"../../../framework/login/logoutData.service\";\nimport {AuththenticationGuardService} from \"../../../framework/login/authenticationGuard.service\";\nimport {NavService} from \"../../../shared/nav.service\";\nimport $ from 'jquery';\nimport {maxlengthFieldValidator} from \"../../../framework/validations/validator-maxlengthField.directive\";\nimport {AppConfig as app} from \"../../../framework/appConfig\";\n\n\n@IonicPage()\n@Component({\n  selector: 'page-changeEmail',\n  templateUrl: 'changeEmail.html',\n  providers: [\n    ChangeEmailService,\n    LogoutDataService,\n    AuththenticationGuardService\n  ]\n})\nexport class ChangeEmailPage {\n  model: any = {};\n  current_email = app.Configuration.ContentMessage.current_email;\n  @ViewChildren(TextInput) textInputs: QueryList<TextInput>;\n\n  constructor(private formBuilder: FormBuilder,\n              public routerManager: RouteManagerService,\n              public alertCtrl: AlertController,\n              private logoutDataService: LogoutDataService,\n              private authService: AuththenticationGuardService,\n              public navCtrl: NavController,\n              private navSvc: NavService,\n              private changeEmailService: ChangeEmailService) {\n    this.model = {\n      currentEmail: AuthenticationDataSharingService.getInstance().loginEmail\n    }\n    this.buildForm();\n  }\n\n  ionViewWillEnter() {\n    $('.app-root').addClass('not-show-tab');\n    if (this.routerManager.ifNotLoggedInThenGoBackToLoginScreen() === false) {\n    }\n  }\n\n  ionViewWillLeave() {\n    $('.app-root').removeClass('not-show-tab');\n  }\n\n  changeEmailForm: FormGroup;\n  formErrors = {\n    'newEmail': '',\n    'confirmNewEmail': '',\n    'password': ''\n  };\n\n  buildForm() {\n    this.changeEmailForm = this.formBuilder.group({\n        'newEmail': ['', [\n          requireValidator('newEmail'),\n          minlengthFieldValidator(6, 'Email'),\n          maxlengthFieldValidator(81, 'Email'),\n          emailValidator()\n        ]],\n        'confirmNewEmail': ['', [\n          requireValidator('confirmNewEmail'),\n          maxlengthFieldValidator(81, 'Email'),\n        ]],\n        'password': ['', [\n          requireValidator('password')\n        ]]\n      },\n      {\n        validator: {\n          validators: checkMatchWith('newEmail', 'confirmNewEmail', 'Email', 'confirmation email'),\n          updateOn: 'blur'\n        }\n      }\n    );\n\n    this.changeEmailForm.statusChanges.subscribe(() => {\n      if (this.textInputs) {\n        this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n      }\n    });\n  }\n\n  errorMessage(path: string) {\n    const control = this.changeEmailForm.get(path);\n    const requiredMsg = app.Configuration.ContentMessage.required;\n    if (control.valid) {\n      return '';\n    }\n\n    if (path === 'newEmail' || path === 'confirmNewEmail' || path === 'password') {\n      if (control.hasError('required')) {\n        return control.getError('required');\n      } else {\n        if (control.hasError('minlengthField')) {\n          return control.getError('minlengthField')\n        }\n\n        if (control.hasError('maxLengthField')) {\n          return control.getError('maxLengthField')\n        }\n\n        if (control.hasError('email')) {\n          return control.getError('email')\n        }\n\n        if (control.hasError('notEquivalent')) {\n          return control.getError('notEquivalent')\n        }\n      }\n    }\n  }\n\n  public updateEmailAddress() {\n\n    let emailInformation = {\n      \"newEmailAddress\": this.changeEmailForm.value.newEmail,\n      \"password\": this.changeEmailForm.value.password\n    }\n    if (this.changeEmailForm.valid) {\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          if (!res.ok) {\n            return;\n          }\n          this.logoutDataService.logout()\n            .subscribe(res => {\n            });\n          this.authService.Logout();\n\n\n          this.navSvc.getRootNav().setRoot('LoginPage');\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        },\n        complete: () => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changeEmailService\n        .changeEmail(emailInformation)\n        .subscribe(observer);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changeEmail/changeEmail.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class ChangeEmailService {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  changeEmail(email): Observable<any> {\n    return this.http.put(\"account/email\", email);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changeEmail/changeEmail.service.ts"],"sourceRoot":""}