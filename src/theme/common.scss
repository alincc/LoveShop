@import "colors";

.validate-password {
  .alert-input-wrapper {
    .alert-input {
      &::placeholder {
        color: color($colors, primary) !important;
        font-family: 'OpenSans-Regular', sans-serif !important;
      }
    }
  }
}

.background-white {
  background: #fff !important;
}

.toast-message {
  white-space: pre-line;
}

.no-padding {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

@font-face {
  font-family: 'Montserrat-Bold';
  src: url('../assets/fonts/Montserrat-Bold.woff') format('truetype');
}

@font-face {
  font-family: 'Montserrat-Regular';
  src: url('../assets/fonts/Montserrat-Regular.woff') format('truetype');
}

@font-face {
  font-family: 'OpenSans-Bold';
  src: url('../assets/fonts/OpenSans-Bold.ttf') format('truetype');
}

@font-face {
  font-family: 'OpenSans-Regular';
  src: url('../assets/fonts/OpenSans-Regular.ttf') format('truetype');
}

@font-face {
  font-family: 'OpenSans-Light';
  src: url('../assets/fonts/OpenSans-Light.eot');
  src: url('../assets/fonts/OpenSans-Light.woff2') format('woff2'),
  url('../assets/fonts/OpenSans-Light.woff') format('woff'),
  url('../assets/fonts/OpenSans-Light.ttf') format('truetype'),
  url('../assets/fonts/OpenSans-Light.svg#OpenSans-Light') format('svg'),
  url('../assets/fonts/OpenSans-Light.eot?#iefix') format('embedded-opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'OpenSansLight-Italic';
  src: url('../assets/fonts/OpenSansLight-Italic.woff') format('woff'),
  url('../assets/fonts/OpenSansLight-Italic.ttf') format('truetype'),
  url('../assets/fonts/OpenSansLight-Italic.svg#OpenSansLight-Italic') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'OpenSans-Semibold';
  src: url('../assets/fonts/OpenSans-Semibold.eot');
  src: url('../assets/fonts/OpenSans-Semibold.woff2') format('woff2'),
  url('../assets/fonts/OpenSans-Semibold.woff') format('woff'),
  url('../assets/fonts/OpenSans-Semibold.ttf') format('truetype'),
  url('../assets/fonts/OpenSans-Semibold.svg#OpenSans-Semibold') format('svg'),
  url('../assets/fonts/OpenSans-Semibold.eot?#iefix') format('embedded-opentype');
  font-weight: normal;
  font-style: normal;
}

@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size {
    font-size: $size;
  }
  @if $colour {
    color: $colour;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
}

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix') format('embedded-opentype'),
    url($file-name + '.woff') format('woff'),
    url($file-name + '.ttf') format('truetype'),
    url($file-name + '.svg##{$font-name}') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), 'webkit' 'ms');
}

@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}

@mixin border-radius($values) {
  -moz-border-radius: $values;
  -webkit-border-radius: $values;
  border-radius: $values;
}

@mixin border-bottom-left-radius($values) {
  -moz-border-radius-bottomleft: $values;
  -webkit-border-bottom-left-radius: $values;
  border-bottom-left-radius: $values;
}

@mixin border-bottom-right-radius($values) {

  -moz-border-radius-bottomright: $values;
  -webkit-border-bottom-right-radius: $values;
  border-bottom-right-radius: $values;
}

@mixin border-top-left-radius($values) {
  -moz-border-radius-topleft: $values;
  -webkit-border-top-left-radius: $values;
  border-top-left-radius: $values;
}

@mixin border-top-right-radius($values) {
  -moz-border-radius-topright: $values;
  -webkit-border-top-right-radius: $values;
  border-top-right-radius: $values;
}

@mixin box-shadow-no() {
  -moz-box-shadow: none;
  -o-box-shadow: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

@mixin font-size-line-height($fs, $lh) {
  font-size: $fs !important;
  line-height: $lh !important;
}

body {
  h2, .text-16 {
    font-size: 16px !important;
    line-height: 24px !important;
  }

  h3, .text-14 {
    font-size: 14px !important;
    line-height: 21px !important;
  }

  h4, .text-12 {
    font-size: 12px !important;
    line-height: 18px !important;
  }

  h5, .text-10 {
    font-size: 10px !important;
    line-height: 15px !important;
  }

  h6, .text-9 {
    font-size: 9px !important;
    line-height: 13px !important;
  }
  p {
    font-size: 14px !important;
    line-height: 21px !important;
  }

  .montserrat-bold {
    font-family: 'Montserrat-Bold', sans-serif !important;
  }

  .montserrat-regular {
    font-family: 'Montserrat-Regular', sans-serif !important;
  }

  .openSans-bold {
    font-family: 'OpenSans-Bold', sans-serif !important;
  }

  .openSans-regular {
    font-family: 'OpenSans-Regular', sans-serif !important;
  }

  @media only screen and (max-width: 414px) and (orientation: portrait) {
    .center-vertically {
      @include center(vertical);
      width: calc(100% - 24px) !important;
    }
  }

  * {
    &:not(.fa) {
      font-family: 'OpenSans-Regular', sans-serif;
    }

    &.icon {
      font-family: "Ionicons";
    }

  }

  .button.button-default,
  .button-md.button-default,
  .button-ios.button-default {
    height: 35px !important;
    font-family: 'OpenSans-Bold', sans-serif;
    background-color: map-get($colors, primary-pink);
    box-shadow: 0px 4px 0px 0px color($colors, primary-pink-dark);

    .button-inner {
      font-size: 14px !important;
      line-height: 21px !important;
    }
    &.button-block {
      margin: 0;
    }
    &.l2s-btn {
      &--primary {
        background-color: map-get($colors, primary-green);
        box-shadow: 0px 4px 0px 0px color($colors, primary-green-dark);
      }

      &--outline {
      }

      &.more-half {
        width: 65%;
      }

      &.short {
        width: 20%;
      }
    }

  }

  button {
    &.button-outline {
      //text-transform: capitalize;
    }
  }

  $sides: (top, bottom, left, right);
  @for $space from 0 through 500 {
    @each $side in $sides {
      .m-#{str-slice($side, 0, 1)}-#{$space} {
        margin-#{$side}: #{$space}px !important;
      }
      .p-#{str-slice($side, 0, 1)}-#{$space} {
        padding-#{$side}: #{$space}px !important;
      }
    }
    .padding-#{$space} {
      padding: #{$space}px !important;
    }

    .margin-#{$space} {
      margin: #{$space}px !important;
    }
  }

  @for $fs from 1 through 100 {
    .text-font-#{$fs} {
      font-size: #{$fs/10}rem !important;
    }
  }

  .no-wrap-text {
    white-space: nowrap !important;
  }

  .img-ratio-16-9 {
    position: relative;
    padding-bottom: 62.5%;
    overflow: hidden;

    img {
      left: 0;
      position: absolute;
      top: 50%;
      width: 100%;
      -webkit-transform: translateY(-50%);
      transform: translateY(-50%);

    }
  }

  .img-ratio-1-1 {
    position: relative;
    padding-bottom: 100%;
    overflow: hidden;
    border-radius: 8px;
    margin: 15px auto;

    img {
      left: 0;
      position: absolute;
      top: 50%;
      width: 100%;
      -webkit-transform: translateY(-50%);
      transform: translateY(-50%);

    }
  }
  .header {
    .toolbar,
    .toolbar-ios {
      ion-title {
        padding: 0;
      }
    }
  }

  .toolbar-title {
    font-family: 'Montserrat-Regular', sans-serif;
    text-overflow: ellipsis;
    overflow: auto;
    padding: 0 40px 0 25px;

  }
  ion-header {
    ion-buttons[right] {
      padding-right: 2px;
    }

    .bar-buttons {
      padding: 0;
      margin: 0;
    }
  }

  .tabbar {
    * {
      font-family: 'OpenSans-Regular', sans-serif;
    }
    .tab-button {
      .tab-button-icon {
        color: #80b5c5 !important;
      }
      .tab-button-text {
        line-height: 13px;
      }
    }
    .tab-button[aria-selected=true] {
      .tab-button-icon {
        color: #016a8a;
      }
      .tab-button-text {
        line-height: 13px;
        color: #016a8a;
      }
    }
    .tab-button[aria-selected=true] {
      background: color($colors, secondary-aero-blue);
    }
  }

  ion-alert {

    &.l2s-alert--default {
      .alert-wrapper {
        max-width: 85%;
        width: 85%;

        .alert-button {
          flex-basis: 100%;
        }
      }
    }
    .alert-wrapper {
      max-width: 95%;
      width: 95%;
      background: #FFF !important;
      .alert-sub-title, .alert-message {
        @include font-size-line-height(16px, 24px);
        padding-left: 15px;
        padding-right: 15px;
      }

      .alert-message {
        margin-top: 20px;
        font-family: 'OpenSans-Bold', sans-serif;
        color: color($colors, primary);
      }
    }
  }

  .item, div {
    &.error {
      padding: 0;
      background-color: color($colors, primary-background-error) !important;
      border: 1px solid color($colors, red-ca) !important;
      border-top: 0 !important;
      margin-top: 0 !important;
      @include border-radius(0 !important);
      .item-inner {
        padding-right: 0 !important;
      }
      .label {
        margin: 0;
        p {
          color: color($colors, red-ca) !important;
          @include font-size-line-height(12px, 18px);
          font-family: 'OpenSans-Regular', sans-serif;
          white-space: normal !important;
          padding: 12px;
          margin: 0;
        }
      }

    }
  }

  .item-checkbox {
    padding-left: 30px !important;
    ion-checkbox {
      &.checkbox {
        margin: 0 !important;
        position: absolute !important;
        top: 4px;
        left: 0;
        .checkbox-icon {
          border-width: 2px !important;
          border-color: color($colors, primary-green);
          border-radius: 5px;
          margin: 0 10px 0 0;
          width: 22px;
          height: 22px;
          &.checkbox-checked {
            background: color($colors, primary-green) !important;
            .checkbox-inner {
              border-color: #FFF !important;
              top: 0px;
              left: 6px;
              width: 7px;
              height: 14px;
              border-width: 3px;
              border-top-width: 0;
              border-left-width: 0;
            }
          }
        }
      }
    }

    .label {
      font-size: 12px;
      line-height: 18px;
      margin-top: 0;
      color: color($colors, primary) !important;
    }
  }

  .alert-radio {
    &[aria-checked=true] .alert-radio-inner {
      transform: scale3d(1, 1, 1) !important;
    }
    .alert-radio-icon {
      min-width: auto;
      width: 28px;
      height: 28px;
      border-color: color($colors, primary-green) !important;
      order: 0;

      left: 13px;
      top: 0;
      border-radius: 50%;
      position: relative;
      display: block;
      border-width: 2px;
      border-style: solid;

      .alert-radio-inner {
        width: 14px;
        height: 14px;
        top: 5px;
        left: 5px;
        background-color: color($colors, primary-green) !important;
        border-color: color($colors, primary-green) !important;
        transform: scale3d(0, 0, 0);
        border-radius: 50%;
        position: absolute;
        transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);
      }
    }
    .alert-radio-label {
      @include font-size-line-height(12px, 18px);
      color: color($colors, primary) !important;
      order: 1;
      padding: 13px 26px;
    }
  }

  a[disabled], button[disabled], [ion-button][disabled] {
    opacity: .5;
  }

  .scroll-content .input-has-focus .label[floating] {
    background-color: map-get($colors, input-background);
  }

  .item-ios {
    color: color($colors, primary);
  }

  .input-csc-wrapper {
    .item {
      width: 65%;
      ion-input {
        height: 40px;
        @include border-radius(5px)
      }
    }
  }

  .text-center {
    text-align: center;
  }

  .width-45-left {
    width: 45% !important;
    max-width: 45% !important;
    margin-right: 5% !important;
    flex: 0 0 45%;
  }

  .width-45-right {
    width: 45% !important;
    max-width: 45% !important;
    margin-left: 5% !important;
    flex: 0 0 45%;
  }
}

body {
  &.focus-outline {
    button:focus, [ion-button]:focus {
      outline: none;
      box-shadow: none;
      border: none;
    }
  }

  .alert-md {
    .alert-button {
      margin-right: 0;
    }
    .alert-message {
      padding-left: 15px;
      padding-right: 15px;
    }

    .alert-head {
      padding: 15px;
    }
  }

  .card-item--wrapper {
    margin: 0;
    background: map-get($colors, secondary-aero-blue-ligth);
    width: 100%;
  }

  .content-md,
  .content-ios {
    color: map-get($colors, primary) !important;
  }
  .wrapper {
    overflow: hidden;
    .scroll-content {
      padding-bottom: 0 !important;
    }
    .main-content {
      width: 100%;
      height: 100%;
    }
  }
  .item-divider {
    background: transparent !important;
    border: none !important;
  }
  ion-title {
    text-transform: uppercase;
  }

  fake-back-btn {
    color: gray;
    font-size: 1.7rem;
  }

  ion-item {
    .item-inner {
      border-bottom: 0 !important;
    }
  }
  .content-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .header-content {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
  .main-content {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .footer-content {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
  .item-cover {
    height: initial !important;
  }
}

ion-alert {
  ion-backdrop {
    opacity: 0.5 !important;
    transition-duration: 0s !important;
  }
}

.border-divider {
  height: 1px;
  background: map-get($colors, primary);

  &.border-color {
    background: map-get($colors, primary-green);
  }
}

ion-title {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0 90px 1px;
  width: 100%;
  height: 100%;
  text-align: center;
}

.back-button {
  z-index: 99;
}

p {
  white-space: normal !important;
}

.bar-button-default-md {
  color: #FFFFFF !important;
}

.text-small {
  font-size: 12px;
  color: map-get($colors, primary)
}

.text-bold {
  font-family: 'OpenSans-Bold', sans-serif !important;
}

.text-uppercase {
  text-transform: uppercase;
}

.full-w {
  width: 100% !important;
}

.tran-bg {
  background: transparent !important;
}

.invisible {
  opacity: 0;
  visibility: hidden;
}

.fake-back-btn {
  background: transparent;
  font-size: 25px;
  color: gray;
  margin: 0;
  padding: 0px 2px;
}

.password {
  -webkit-text-security: disc;
  -moz-webkit-text-security: disc;
  -o-text-security: disc;
  -ms-text-security: disc;
}

.help-circle,
.ion-ios-help-circle,
.ion-md-help-circle,
.ion-help,
.ion-md-help,
.ion-ios-help {
  padding: 0;
  z-index: 9999;
  width: 3rem;
  text-align: center;
}

@media only screen and (max-width: 414px) and (orientation: portrait) {
  .keyboard-not-show {
    .button--bottom {
      position: absolute;
      bottom: 20px;
      width: calc(100% - 24px) !important;
    }
  }
}

@media only screen and (min-width: 767px) {
  .button.button-default,
  .button-md.button-default,
  .button-ios.button-default {
    height: 40px !important;
  }

  .button--bottom-ipad {
    position: absolute;
    bottom: 20px;
    width: calc(100% - 24px) !important;
  }
}

no-wrap {
  white-space: nowrap;
  word-wrap: normal;
}

.help-circle-middle {
  @include center(vertical);
  z-index: 10;
  font-size: 2.5rem;
}

.link-item {
  color: map_get($colors, primary-green);
}

ion-modal {
  z-index: 99999 !important;
}

ion-modal {
  .modal-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
  }
}

ion-alert {
  z-index: 100000 !important;
}

ion-loading {
  z-index: 100001 !important;

}

.gm-style-iw {
  overflow: visible;
}

ion-modal {
  z-index: 100002 !important;
}

.app-root-ios {
  ion-modal {
    z-index: 100002 !important;
  }
}

body {
  .item.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
  .item.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner {
    border: none;
    box-shadow: none;
  }

  .item.item-input.item-input-has-focus .item-inner, .item.item-input.input-has-focus .item-inner {
    border: none;
    box-shadow: none;
  }

  ion-select, ion-datetime {
    background: map_get($colors, input-background) !important;
  }

  ion-input {
    background: map_get($colors, input-background) !important;
    .text-input-ios {
      input {
        margin-left: 10px;
      }
    }
    input {
      background: map_get($colors, input-background) !important;
      width: 100%;
    }
  }

  .item {
    &.item-input {
      .item-inner {
        border: none !important;
        box-shadow: none !important;
      }
    }
  }

  .item {
    &.item-input {
      &.ng-dirty {
        &.ng-invalid {
          .item-inner {
            border: 1px solid color($colors, red-ca);
            box-shadow: none !important;

            .text-input {
              border-color: map-get($colors, red-ca) !important;
            }
          }
        }

      }
    }
  }

  .l2s-alert--flat {
    text-align: center;
    .close-button {
      text-align: right;
      min-width: auto;
      position: absolute;
      padding: 15px;
      right: 0;
      top: 0;
      margin: 0;
      font-size: 5rem;
      font-weight: 100;
      height: auto;
    }

    .alert-wrapper {
      .alert-button-group .alert-button {
        &.validate-target {
          border-radius: 0 !important;
        }

        border-radius: 0 !important;

      }
    }

    &.l2s-alert--twobutton {
      .alert-wrapper {
        .alert-button-group .alert-button {
          border-radius: 5px !important;
        }
      }
      .alert-sub-title {
        text-align: center;
        margin-top: 30px;
      }
      .alert-wrapper {
        .alert-button-group {
          flex-direction: row;
          height: 140px;
        }
        .main-button {
          bottom: 100px;
        }

        .main-button, .cancel-button {
          position: absolute;
          min-width: 65%;
          width: 65%;
          left: 0;
          right: 0;
          margin: auto;
          &.no-transform {
            text-transform: none;
          }
        }

        .cancel-button {
          min-width: 30px;
          bottom: 30px;
          border: 1px solid map_get($colors, primary-green);
          color: map_get($colors, primary-green);
        }
      }

    }

    .alert-wrapper {
      border-radius: 5px;
      padding: 0;
      position: relative;
      background: #fff;
      .alert-head {
        padding: 45px 0 5px 0;
        h2 {
          font-size: 1.4rem;
          text-align: center;
          margin-top: 0;
          font-weight: normal;
        }
      }

      .alert-button-group {
        padding: 0;
        .alert-button {
          border-radius: 5px;
          &.close-button {
          }
          .button-inner {
            justify-content: center;
            font-size: 1.4rem;
          }
        }
      }
      .main-button {
        background: map_get($colors, primary-pink);
        color: #FFFFFF;
        width: 100%;
        margin: 0;
        border: 0;
        box-shadow: 0px 4px 0px 0px color($colors, primary-pink-dark);
        height: 37px;
      }

      .cancel-button {
        height: 40px;
      }

      button.close-button {
        text-align: right;
        min-width: auto;
        position: absolute;
        padding: 15px;
        right: 0;
        top: 0;
        margin: 0;
        font-size: 5rem !important;
        font-weight: 100;
        height: auto;
        font-family: "Ionicons" !important;
        color: color($colors, primary);
        border: 0 !important;

      }
    }

    ion-backdrop {
      opacity: .5 !important;
    }
  }

  .l2s-alert--default {
    &.alert-md {
      .alert-button-group {
        flex-wrap: wrap;
      }
    }

    .alert-wrapper {
      .alert-button {
        background: #FFF;
        color: color($colors, primary-green);
        font-family: 'OpenSans-Bold', sans-serif;
        box-shadow: none !important;
        margin-bottom: 0 !important;
        @include font-size-line-height(14px, 21px);
        border-top: 1px solid color($colors, primary-boder);
        .button-inner {
          font: inherit;
          text-align: center;
          justify-content: center;
          @include font-size-line-height(14px, 21px);
        }
      }

      .alert-title {
        font-family: 'OpenSans-Bold', sans-serif;
        @include font-size-line-height(16px, 24px);
      }

      .alert-message {
        p {
          font-family: 'OpenSans-Regular', sans-serif;
          @include font-size-line-height(12px, 18px);
        }
      }
    }

    .alert-button-group {
      padding: 0;
    }

    .no-text-transform {
      text-transform: none;
    }

    &.l2s-alert--button-x {
      .alert-button-group {
        min-height: 60px;
      }
      .alert-wrapper {
        padding-top: 15px;
      }
    }

  }
}

.flex-wrapper {
  .scroll-content {
    display: flex;
    justify-content: space-between;
    margin-top: 56px;
    flex-direction: column;
    flex-flow: column;
    flex-wrap: wrap;

    .content-wrapper {
      min-height: auto;
    }

    .footer-wrapper {
      height: auto;
    }
  }
}

.content-wrapper {
  width: 95% !important;
  margin: auto !important;
  min-height: calc(100% - 50px);
}

.footer-wrapper {
  width: 95% !important;
  margin: auto !important;
  padding: 0;
  height: 50px;
  margin-top: 10px;
}

.clearfix:after {
  display: block;
  clear: both;
  content: "";
}

ion-header {
  .back-button.show-back-button {
    display: inline-block;
    padding-left: 0 !important;
    margin-left: 0 !important;
    min-width: 28px !important;
    padding-right: 0;

    .back-button-icon {
      font-size: 1.8em;
    }

  }

}

.border-top {
  border-top: 1px solid color($colors, secondary);
}

ion-checkbox.checkbox.checkbox-ios {
  .checkbox-icon {
    border-radius: 0;
  }
}

.app-root {
  .error-equal--input--wrapper {
    width: calc(100% - 39px);
  }
  ion-alert {
    .alert-message {
      overflow-y: hidden;
      max-height: 500px;
    }
  }

  .alert-md .alert-button {
    text-transform: none;
  }

  form {
    .item-has-addon {
      background-color: transparent;
    }
  }

  .item.item-block.item-label-floating.input-has-value .label-float-big {
    font-size: 12px !important;
    line-height: 18px !important;
  }

  ion-alert {
    .alert-input {
      border: solid 1px #ccc;
      border-radius: 5px;
      padding: 0 8px;
      height: 40px;
      font-family: 'Password', monospace !important;
      margin: 0;
      background: map_get($colors, input-background);
      &:focus {
        margin: 0;
        border-bottom: solid 1px #ccc;
      }
    }
  }

}

.wrong-pin {
  z-index: 999999 !important;
}

.text-red {
  color: color($colors, red-ca);
}

.no-text-transform {
  text-transform: none;
}

.text-transform-lowercase {
  display: inline-block;
  text-transform: lowercase;

  &::first-letter {
    text-transform: uppercase;
  }
}

.text-underline {
  text-decoration: underline;
}

.alert-prevent-top {
  padding-top: 0;
  align-items: center;
}

.row-1em {
  display: inline-block;
  min-height: 1.2em;
  white-space: nowrap;
}

.order-1 {
  order: 1
}

.order-2 {
  order: 2;
}

.order-3 {
  order: 3;
}

.order-4 {
  order: 4;
}

.tp-flex-container {
  display: flex;
  &.tp-flex-columns {
    flex-direction: column;
  }
  &.align-between {
    justify-content: space-between;
  }
}

.tp-full-height {
  min-height: 100%;
}

.tp-flex-center-col {
  flex: 1 100%;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
}

.position-relative {
  position: relative;
}

.scroll-content {
  //width: 95%;
  //margin: auto;
  padding-top: 20px;
}

.l2s-click-disabled {
  pointer-events: none;
}

.not-show-tab {
  .tabbar {
    display: none !important;
  }

  .scroll-content {
    margin-bottom: 0 !important;
  }
}

.l2s-content-login {
  .scroll-content {
    margin-bottom: 56px;
  }
}

.ios {
  .l2s-content-login {
    .scroll-content {
      margin-bottom: 49px !important;
    }
  }
}

.cart-badge {
  position: absolute;
  top: -2px !important;
  right: -8px !important;
  font-size: 11px !important;
  left: auto !important;
  background-color: #E50978 !important;
  border-radius: 50% !important;
}

.flex-content {
  .footer-wrapper {
    margin-bottom: 10px;
    margin-top: 10px;
    padding: 0 10px;
  }
}

.card-icon-wrapper {
  text-align: left;
}

.item-checkbox {
  + .item {
    &.error {
      border-top: 1px solid map-get($colors, red-ca) !important;
    }
  }
}

.text-link-item {
  color: #00AAFF !important;
  a {
    color: #00AAFF;
  }
}

.card-quantities {
  h3 {
    @include font-size-line-height(14px, 21px);
    color: map-get($colors, secondary);
    font-family: 'OpenSans-Bold', sans-serif !important;
    margin-top: 0;
  }
}

.bullets .bullet {
  margin: 0 3.5px !important;
}

.picker-md .picker-wrapper {
  .picker-opts {
    .picker-opt.picker-opt-selected {
      color: #000000;
      font-size: 26px;
    }

    .picker-opt {
      color: #666666;
      font-size: 21px;
    }
  }
}

.list-ios > .item-block:last-child,
.list-ios > .item-wrapper:last-child .item-block {
  border-bottom: 0 !important;
}

.bullets .bullet {
  border-color: #6ba3b4 !important;
}

.segment-md {
  .segment-button {
    opacity: 1 !important;
    border-color: #666666;
  }
  &.segment-disabled,
  .segment-button-disabled {
    opacity: 1 !important;
    color: rgba(102, 102, 102, 0.3) !important;
  }
}

.platform-ios {
  .other-input::-webkit-input-placeholder {
      margin-top: 7px !important;
  }
}

.toggle {
  &.new-style{
    width: 40px !important;
    height: 25px !important;
    .toggle-icon {
      border: 1px solid map-get($colors, primary);
      background-color: map-get($colors, input-background);
      .toggle-inner {
        width: 24px;
        height: 24px;
        border: 1px solid map-get($colors, primary);
        background-color: #fff;
        top: -1px;
        left: -1px;
        box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.2);
      }
    }

    &.toggle-checked {
      .toggle-icon {
        background-color: map-get($colors, primary-green);
        border-color: #fff;

        .toggle-inner {
          border-color: #fff;
          left: -3px;
        }
      }
    }
  }
}

@media screen and (min-width: 767px) {

  .ion-page {
    > ion-content {
      background-color: map-get($colors, secondary-aero-blue-ligth);
    }
  }
  .scroll-content {
    width: calc(70% + 56px);
    padding-left: 28px;
    padding-right: 28px;
    margin: auto;
    background-color: #fff;
    .content-wrapper {
      width: 100% !important;
      min-height: calc(100% - 60px);
    }

    .footer-wrapper {
      width: 100% !important;
    }
  }

  body {
    .button.button-default,
    .button-md.button-default,
    .button-ios.button-default,
    .button-outline-ios {
      height: 40px !important;
    }

    ion-alert {
      .alert-wrapper {
        width: 45% !important;
        max-width: 45% !important;
      }
    }
    .l2s-alert--flat {
      .alert-wrapper {
        max-width: 45% !important;
        .alert-button-group {
          .alert-button {
            width: 80%;
            height: 40px !important;
          }
        }
      }
    }

    .l2s-alert--default {
      .alert-wrapper {
        max-width: 45% !important;
        .alert-button {
          height: 40px !important;
        }
      }
    }

    .app--root .alert-wrapper {
      .alert-button {
        height: 40px !important;
      }

    }

  }
}
