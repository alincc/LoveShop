{"version":3,"sources":["../../src/spa/+screens/AccountManagement/changePIN/changePIN.module.ts","../../src/spa/framework/validations/validator-maxlengthField.directive.ts","../../src/spa/framework/validations/validator-minlengthField.directive.ts","../../src/spa/framework/validations/validator-email.directive.ts","../../src/spa/+screens/AccountManagement/changePIN/changePIN.ts","../../src/spa/+screens/AccountManagement/changePIN/changePIN.service.ts"],"names":[],"mappings":"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","file":"25.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePINPage } from './changePIN';\n\n@NgModule({\n  declarations: [ChangePINPage],\n  imports: [IonicPageModule.forChild(ChangePINPage)],\n  exports: [ChangePINPage]\n})\nexport class ChangePINPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changePIN/changePIN.module.ts","import {\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function maxlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no more than ${length} characters in length.`;\n}\n\nexport function maxlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\nexport function maxlengthFieldValidatorExtraCard(\n    length: number,\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = parseInt(control.value);\n        if (input !== null && typeof input !== 'undefined') {\n            return (input > length)\n                ? { maxLengthField: errorMessageExtraCard(length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessageExtraCard(\n    length\n): string {\n    return `Maximum ${length} extra gift cards.`;\n}\n\nexport function maxlengthFieldValidatorCSC(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessageCSC(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessageCSC(\n  fieldName: string = 'field',\n  length: number\n): string {\n  // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\nexport function maxlengthFieldValidatorPIN(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessagePIN(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessagePIN(\n  fieldName: string = 'field',\n  length: number\n): string {\n  return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-maxlengthField.directive.ts","import {\n    Directive,\n    Input,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\n\nimport {\n    NG_VALIDATORS,\n    Validators,\n    Validator,\n    ValidatorFn,\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function minlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no less than ${length} characters in length.`;\n}\n\nexport function minlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? { minlengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\n\n@Directive({\n    selector: '[minlengthField]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: MinlengthFieldValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class MinlengthFieldValidatorDirective implements Validator, OnChanges {\n    @Input() minlengthField: string;\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes['minlengthField'];\n        if (change) {\n            this.valFn = minlengthFieldValidator(parseInt(change.currentValue, 0));\n        } else {\n            this.valFn = Validators.nullValidator;\n        }\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-minlengthField.directive.ts","import { Directive } from '@angular/core';\nimport {\n    AbstractControl,\n    NG_VALIDATORS,\n    ValidatorFn,\n    Validators,\n    Validator\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\nexport function emailValidator() {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n        if (!emailRegex.test(control.value))\n        {\n            return { email: errorMessage() }\n        }   \n        \n        return null;\n    };\n}\n\nfunction errorMessage() {\n    return app.Configuration.ContentMessage.email_invalid_email;\n}\n\n\n@Directive({\n    selector: '[isEmail]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: EmailValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class EmailValidatorDirective implements Validator {\n    valFn: ValidatorFn = Validators.nullValidator;\n    constructor() {\n        this.valFn = emailValidator();\n    }\n\n    validate(control: AbstractControl) {\n        return this.valFn(control);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-email.directive.ts","import { Component, ViewChildren, QueryList } from '@angular/core';\nimport {IonicPage, NavController, TextInput} from 'ionic-angular';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {requireValidator} from '../../../framework/validations/validator-required.directive';\nimport {ChangePINService} from \"./changePIN.service\";\nimport {LoadingIndicatorService} from '../../../framework/services/loadingIndicatorService/loadingIndicator.service';\nimport {PinCodeService} from '../../../framework/services/pinCodeService/pinCode.service';\nimport {ToastMessageService} from '../../../framework/services/toastMessageService/toastMessage.service';\nimport {Utils} from '../../../framework/services/utilities/utilities';\nimport {AuththenticationGuardService} from \"../../../framework/login/authenticationGuard.service\";\nimport {RouteManagerService} from \"../../../framework/services/routeManager/routeManager.service\";\nimport {minlengthFieldValidator} from \"../../../framework/validations/validator-minlengthField.directive\";\nimport {emailValidator} from \"../../../framework/validations/validator-email.directive\";\nimport $ from 'jquery';\nimport {maxlengthFieldValidator} from \"../../../framework/validations/validator-maxlengthField.directive\";\nimport { AppConfig as app } from \"../../../framework/appConfig\";\n\n@IonicPage()\n@Component({\n  selector: 'page-changePIN',\n  templateUrl: 'changePIN.html',\n  providers: [\n    ChangePINService\n  ]\n})\nexport class ChangePINPage {\n  model: any = {};\n  park_api_enter_userid_password_to_change_pin = app.Configuration.ContentMessage.park_api_enter_userid_password_to_change_pin;\n  @ViewChildren(TextInput) textInputs: QueryList<TextInput>;    \n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuththenticationGuardService,\n              public routeManager: RouteManagerService,\n              public navCtrl: NavController,\n              private changePINService: ChangePINService) {\n    this.buildForm();\n  }\n  ionViewWillEnter() {\n    $('.app-root').addClass('not-show-tab');\n  }\n\n  ionViewWillLeave() {\n    $('.app-root').removeClass('not-show-tab');\n  }\n\n  public doLogin() {\n    if (this.userLoginForm.valid) {\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (!res.ok) {\n            return;\n          }\n          let body = res.response;\n\n          let authInfo = {\n            token: body.accessToken,\n            accessTokenExpiry: body.accessTokenExpiry,\n            emailAddress: this.userLoginForm.value.emailAddress\n          };\n\n          let userOld = window.window.localStorage.getItem('lastLoggedIn');\n          let userNew = this.userLoginForm.value.emailAddress;\n\n          if (Utils.isNotNull(userOld) && Utils.isNotNull(userNew)) {\n            if (userOld.toLocaleLowerCase().trim() !== userNew.toLocaleLowerCase().trim()) {\n\n              ToastMessageService.getInstance().showToastMessage(app.Configuration.ContentMessage.park_api_user_id_no_match);\n            } else {\n              this.navCtrl.push('UpdatePINPage');\n            }\n          }\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changePINService\n        .login(this.userLoginForm.value)\n        .subscribe(observer);\n    }\n  }\n\n  userLoginForm: FormGroup;\n  formErrors = {\n    'emailAddress': '',\n    'password': ''\n  };\n\n  buildForm() {\n    this.userLoginForm = this.formBuilder.group({\n      'emailAddress': ['', [\n        requireValidator('emailAddress'),\n        minlengthFieldValidator(6, 'Email'),\n        maxlengthFieldValidator(81, 'Email'),\n        emailValidator()\n      ]],\n      'password': ['', [\n        requireValidator('password'),\n      ]]\n    },{\n      validator: {\n        updateOn: 'blur'\n      }\n    });\n\n    this.userLoginForm.statusChanges.subscribe(() => {\n      if (this.textInputs) {\n        this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n      }\n    });\n\n  }\n\n  errorMessage(path: string) {\n    const control = this.userLoginForm.get(path);\n    const requiredMsg = app.Configuration.ContentMessage.required;\n    if (control.valid) {\n      return '';\n    }\n\n    if (path === 'emailAddress' || path === 'password') {\n      if (control.hasError('required')) {\n        return control.getError('required');\n      } else {\n        if (control.hasError('minlengthField')) {\n          return control.getError('minlengthField')\n        }\n\n        if (control.hasError('maxLengthField')) {\n          return control.getError('maxLengthField')\n        }\n\n        if (control.hasError('email')) {\n          return control.getError('email')\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changePIN/changePIN.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class ChangePINService {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  login(dataLogin: any): Observable<any> {\n    return this.http.post('account/authenticate', dataLogin);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changePIN/changePIN.service.ts"],"sourceRoot":""}