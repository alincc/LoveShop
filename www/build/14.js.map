{"version":3,"sources":["../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.module.ts","../../src/spa/framework/validations/validator-maxlengthField.directive.ts","../../src/spa/framework/validations/validator-minlength.directive.ts","../../src/spa/+screens/CardManagement/checkBalance/cardBalanceSharingData.service.ts","../../src/spa/+screens/CardManagement/checkBalance/cardBalanceData.service.ts","../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.ts","../../src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACY;AAO5D;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QALvC,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iFAAqB,CAAC;YACrC,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,iFAAqB,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC,iFAAqB,CAAC;SACjC,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;ACNM;AAExC,iCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACnD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,sBACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAI,SAAS,6BAAwB,MAAM,2BAAwB,CAAC;AAC9E,CAAC;AAEK,yCACF,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAE,cAAc,EAAE,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBAC3D,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,8BACI,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,yBAAyB,CAAC;AACtE,CAAC;AAGK,0CACF,MAAc;IAEd,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;kBACjB,EAAE,cAAc,EAAE,qBAAqB,CAAC,MAAM,CAAC,EAAE;kBACjD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,+BACI,MAAM;IAEN,MAAM,CAAC,aAAW,MAAM,uBAAoB,CAAC;AACjD,CAAC;AAEK,oCACJ,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAE,cAAc,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACtD,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,yBACE,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,kDAAkD;IAChD,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,qBAAqB,CAAC;AAClE,CAAC;AAEK,oCACJ,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAE3B,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAE,cAAc,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;kBACtD,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,yBACE,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAG3B,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAAC;AACvD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHwE;AACyB;AACpD;AAExC,4BAA6B,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAC5D,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1F,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAC,SAAS,EAAE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,EAAC;kBAC5C,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,sBAAsB,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAE/C,MAAM,CAAI,SAAS,0BAAqB,MAAM,2BAAwB,CAAC;AACzE,CAAC;AAEK,+BAAgC,MAAc,EACjB,SAA2B;IAA3B,+CAA2B;IAC5D,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAC,SAAS,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAC;kBAC/C,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAGD,yBAAyB,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAEhD,kDAAkD;IAClD,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,qBAAqB,CAAC;AAClE,CAAC;AAGK,oCAAqC,MAAc,EACnB,SAA2B;IAA3B,+CAA2B;IAC/D,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBAC1B,EAAC,SAAS,EAAE,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAC;kBACpD,IAAI,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAGD,8BAA8B,SAA2B,EAChC,MAAc;IADT,+CAA2B;IAEvD,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,yBAAyB,CAAC;AACpE,CAAC;AAED,kCAAkC,SAA2B,EACvC,MAAc;IADF,+CAA2B;IAE3D,MAAM,CAAC,aAAW,MAAM,oBAAiB,CAAC;AAC5C,CAAC;AAEK,wCAAyC,MAAc,EACvB,SAA2B;IAA3B,+CAA2B;IAC7D,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAC,SAAS,EAAE,wBAAwB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAC;kBACxD,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAEK,+BAAgC,MAAc,EACd,SAA2B;IAA3B,+CAA2B;IAC7D,MAAM,CAAC,UAAC,OAAwB;QAC5B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;kBACxB,EAAC,SAAS,EAAE,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,EAAC;kBAC/C,IAAI,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;AAED,yBAAyB,SAA2B,EAC3B,MAAc;IADd,+CAA2B;IAEhD,MAAM,CAAC,6DAAG,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAAC;AACzD,CAAC;AAWD;IAIE;QAFA,UAAK,GAAgB,kEAAU,CAAC,aAAa,CAAC;IAG9C,CAAC;oCALU,2BAA2B;IAOtC,iDAAW,GAAX,UAAY,OAAsB;QAChC,IAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;QACpC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,kEAAU,CAAC,aAAa,CAAC;QACxC,CAAC;IACH,CAAC;IAED,8CAAQ,GAAR,UAAS,OAAwB;QAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAjBQ;QAAR,oEAAK,EAAE;;kEAAmB;IADhB,2BAA2B;QATvC,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,qEAAa;oBACtB,WAAW,EAAE,6BAA2B;oBACxC,KAAK,EAAE,IAAI;iBACZ,CAAC;SACH,CAAC;;OAEW,2BAA2B,CAoBvC;IAAD,kCAAC;;CAAA;AApBuC;;;;;;;;;;;;;AChHE;AAC4B;AAEtE;IA4DE;QA3DQ,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,sBAAiB,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnE,YAAO,GAAG,IAAI,wDAAe,CAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC;QA0DjE,EAAE,CAAC,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C,MAAM,IAAI,KAAK,CAAC,+BAA+B;kBAC3C,iEAAiE,CAAC,CAAC;QACzE,CAAC;QAED,6BAA6B,CAAC,SAAS,GAAG,IAAI,CAAC;IACjD,CAAC;IA9DD,sBAAI,iDAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,kDAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5C,CAAC;IAED,uDAAe,GAAf,UAAgB,UAAe;QAC7B,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;IACjD,CAAC;IAED,uDAAe,GAAf,UAAgB,UAAe;QAC7B,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;IACjD,CAAC;IACD,4DAAoB,GAApB;QACE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC;IACtD,CAAC;IAED,mDAAW,GAAX;QACE,EAAE,CAAC,CAAC,sFAAK,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,SAAS,GAAG;gBACd,SAAS;gBACT,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU;gBACpD,SAAS;gBACT,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,YAAY;aACpD,CAAC;YACF,MAAM,CAAC,SAAS,CAAC;QAEnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,SAAS,GAAG;gBACd,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU;aACrD,CAAC;YACF,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;IAED,iEAAyB,GAAzB;QACE,IAAI,SAAS,GAAG;YACd,SAAS;YACT,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU;SAEzD,CAAC;QAEF,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAKa,yCAAW,GAAzB;QACE,MAAM,CAAC,6BAA6B,CAAC,SAAS,CAAC;IACjD,CAAC;IAJD,2CAA2C;IAC5B,uCAAS,GAAkC,IAAI,6BAA6B,EAAE,CAAC;IAchG,oCAAC;CAAA;AArEyC;;;;;;;;;;;;;;;;;;;;;ACHC;AACsC;AAGjF;IACE,gCACU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAE3B,CAAC;IAJU,sBAAsB;QADlC,yEAAU,EAAE;yCAGK,iGAAW;OAFhB,sBAAsB,CAMlC;IAAD,6BAAC;CAAA;AANkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJgC;AACkB;AAC/B;AAC0C;AAC9B;AACc;AACwC;AAE/C;AACyB;AACG;AACH;AACI;AAIxB;AACb;AAYjE;IAQE,+BAAoB,WAAwB,EACzB,YAAiC,EAChC,sBAA8C,EAC9C,yBAAoD,EACrD,SAA0B,EAC1B,OAAsB,EACtB,SAAoB;QANnB,gBAAW,GAAX,WAAW,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAqB;QAChC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,8BAAyB,GAAzB,yBAAyB,CAA2B;QACrD,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QAZvC,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,mBAAc,GAAQ,EAAE,CAAC;QACzB,SAAI,GAAG,iBAAiB,CAAC;QAezB,eAAU,GAAG;YACX,YAAY,EAAE,EAAE;YAChB,cAAc,EAAE,EAAE;SACnB,CAAC;QAPA,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAQD,yCAAS,GAAT;QAAA,iBA0BC;QAzBC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,YAAY,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE;oBACrC,qHAAgB,CAAC,YAAY,CAAC;oBAC9B,mIAAuB,CAAC,EAAE,EAAE,uBAAuB,CAAC;iBACrD,CAAC;YACF,cAAc,EAAE,CAAC,EAAE,EAAE;oBACnB,qHAAgB,CAAC,KAAK,CAAC;oBACvB,4HAAqB,CAAC,CAAC,EAAE,KAAK,CAAC;oBAC/B,sIAA0B,CAAC,CAAC,EAAE,KAAK,CAAC;oBACpC,wHAAmB,EAAE;iBACtB,CAAC;SAEH,EAAE;YACD,SAAS,EAAE;gBACT,QAAQ,EAAE,MAAM;aACjB;SACF,CAAC,CAAC;QAGH,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC;YAC5C,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,eAAK,IAAI,YAAK,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,EAAE,EAArD,CAAqD,CAAC,CAAC;YAC1F,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,8CAAc,GAAd,UAAe,IAAI;QAAnB,iBAqBC;QApBC,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,UAAC,GAAG;gBACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBACZ,MAAM,CAAC;gBACT,CAAC;gBACD,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBAChD,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC3C,CAAC;YACH,CAAC;YACD,KAAK,EAAE,UAAC,KAAK;gBACX,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC/D,CAAC;YACD,QAAQ,EAAE;gBACR,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC/D,CAAC;SACF,CAAC;QACF,IAAI,CAAC,yBAAyB;aAC3B,UAAU,CAAC,IAAI,CAAC;aAChB,SAAS,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAED,6CAAa,GAAb,UAAc,OAAO;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,oCAAoC;YAC9C,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,aAAa;oBACvB,OAAO,EAAE,cAAI;oBACb,CAAC;iBACF,EAAC;oBACA,IAAI,EAAE,EAAE;oBACR,QAAQ,EAAE,0CAA0C;oBACpD,OAAO,EAAE,cAAI;oBACb,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAGD,gDAAgB,GAAhB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACtD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,YAAY,EAAE,IAAI,CAAC,aAAa,GAAG,EAAE,EAAC,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAED,gDAAgB,GAAhB;QAAA,iBAwBC;QAvBC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,IAAI,QAAQ,GAAG;gBACb,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU;aACjD;YACD,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC7D,IAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,UAAC,GAAG;oBACR,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;oBAC7D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACxB,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;gBAElC,CAAC;gBACD,KAAK,EAAE,UAAC,KAAK;oBACX,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;gBAC/D,CAAC;aACF,CAAC;YACF,IAAI,CAAC,yBAAyB;iBAC3B,gBAAgB,CAAC,QAAQ,CAAC;iBAC1B,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAED,qDAAqB,GAArB,UAAsB,eAAe;QACnC,EAAE,CAAC,CAAC,sFAAK,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,eAAe,CAAC,QAAQ,KAAK,eAAe,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;QACtG,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,IAAI,GAA+B;gBACvC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU;gBAC9C,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY;aAC9C,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,wDAAwB,GAAxB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,IAAM,IAAI,GAA+B;gBACvC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU;gBAC9C,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY;aAC9C,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAGD,8CAAc,GAAd,UAAe,SAAS;QAAxB,iBAqBC;QApBC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;YAC7D,IAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,UAAC,GAAG;oBACR,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;oBAC7D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;oBAChC,KAAI,CAAC,OAAO;yBACT,OAAO,CAAC,uBAAuB,EAAE,EAAC,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;gBAC5H,CAAC;gBACD,KAAK,EAAE,UAAC,KAAK;oBACX,qIAAuB,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,CAAC;gBAC/D,CAAC;aACF,CAAC;YACF,IAAI,CAAC,yBAAyB;iBAC3B,cAAc,CAAC,SAAS,CAAC;iBACzB,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAED,4CAAY,GAAZ,UAAa,IAAY;QACvB,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChD,IAAM,WAAW,GAAG,wEAAG,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;YACrD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACtC,CAAC;YAAA,IAAI,CAAC,CAAC;gBACL,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC;gBAC3C,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAClC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;gBACtC,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAChC,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAGD,yCAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;IACxG,CAAC;IA5MwB;QAAxB,4EAAY,CAAC,gEAAS,CAAC;kCAAa,gEAAS;6DAAY;IAN/C,qBAAqB;QAVjC,wEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,WAAW,CAA0B;YACrC,4FAAW;gBACT,sGAAsB;gBACtB,6FAA6B;aACJ;WAC1B;SACF,CAAC;+HAU4C;YACX,wFAAmB;YACR,6FAAsB;YACnB,uEAAyB;YAC1C,qEAAe;YACjB,kEAAa;YACX,SAAS;OAd5B,qBAAqB,CAoNjC;IAAD,CAAC;AAAA;SApNY,qBAAqB,e;;;;;;;;;;;;;;;;;;;;AC7BS;AAEyC;AAQpF;IACE,mCACU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAE3B,CAAC;IAED,oDAAgB,GAAhB,UAAiB,MAAM;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IAED,8CAAU,GAAV,UAAW,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,kDAAc,GAAd,UAAe,eAAe;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;IAC/F,CAAC;IAhBU,yBAAyB;QADrC,yEAAU,EAAE;yCAGK,iGAAW;OAFhB,yBAAyB,CAkBrC;IAAD,gCAAC;CAAA;AAlBqC","file":"14.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CheckBalanceStep2Page } from './checkBalanceStep2';\n\n@NgModule({\n  declarations: [CheckBalanceStep2Page],\n  imports: [IonicPageModule.forChild(CheckBalanceStep2Page)],\n  exports: [CheckBalanceStep2Page]\n})\nexport class CheckBalanceStep2PageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.module.ts","import {\n    AbstractControl\n} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function maxlengthFieldValidator(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessage(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessage(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return `${fieldName} can be no more than ${length} characters in length.`;\n}\n\nexport function maxlengthFieldValidatorPostcode(\n    length: number,\n    fieldName: string = 'field'\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length > length)\n                ? { maxLengthField: errorMessagePostCode(fieldName, length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePostCode(\n    fieldName: string = 'field',\n    length: number\n): string {\n    return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\n\nexport function maxlengthFieldValidatorExtraCard(\n    length: number,\n) {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = parseInt(control.value);\n        if (input !== null && typeof input !== 'undefined') {\n            return (input > length)\n                ? { maxLengthField: errorMessageExtraCard(length) }\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessageExtraCard(\n    length\n): string {\n    return `Maximum ${length} extra gift cards.`;\n}\n\nexport function maxlengthFieldValidatorCSC(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessageCSC(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessageCSC(\n  fieldName: string = 'field',\n  length: number\n): string {\n  // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\nexport function maxlengthFieldValidatorPIN(\n  length: number,\n  fieldName: string = 'field'\n) {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length > length)\n        ? { maxLengthField: errorMessagePIN(fieldName, length) }\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessagePIN(\n  fieldName: string = 'field',\n  length: number\n): string {\n  return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-maxlengthField.directive.ts","import {Directive, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, Validators} from '@angular/forms';\nimport {AppConfig as app} from \"../appConfig\";\n\nexport function minlengthValidator(length: number,\n                                   fieldName: string = 'field') {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined' && input !== '' && input.trim() !== '') {\n      return (input.length < length)\n        ? {minlength: errorMessage(fieldName, length)}\n        : null;\n    }\n\n    return null;\n  };\n}\n\nfunction errorMessage(fieldName: string = 'field',\n                      length: number): string {\n  return `${fieldName} must be at least ${length} characters in length.`;\n}\n\nexport function minlengthValidatorCSC(length: number,\n                                   fieldName: string = 'field') {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length < length)\n        ? {minlength: errorMessageCSC(fieldName, length)}\n        : null;\n    }\n\n    return null;\n  };\n}\n\n\nfunction errorMessageCSC(fieldName: string = 'field',\n                         length: number): string {\n    // return `The CSC must contain 3 digit numbers.`;\n    return app.Configuration.ContentMessage.cardCsc_less_than_min;\n}\n\n\nexport function minlengthValidatorPostCode(length: number,\n                                      fieldName: string = 'field') {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const input = control.value;\n    if (input !== null && typeof input !== 'undefined') {\n      return (input.length < length)\n        ? {minlength: errorMessagePostCode(fieldName, length)}\n        : null;\n    }\n\n    return null;\n  };\n}\n\n\nfunction errorMessagePostCode(fieldName: string = 'field',\n                         length: number): string {\n  return app.Configuration.ContentMessage.park_api_invalid_postcode;\n}\n\nfunction errorMessageSerialNumber(fieldName: string = 'field',\n                      length: number): string {\n  return `Must be ${length} digit numbers.`;\n}\n\nexport function minlengthValidatorSerialNumber(length: number,\n                                      fieldName: string = 'field') {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? {minlength: errorMessageSerialNumber(fieldName, length)}\n                : null;\n        }\n\n        return null;\n    };\n}\n\nexport function minlengthValidatorPIN(length: number,\n                                      fieldName: string = 'field') {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        if (input !== null && typeof input !== 'undefined') {\n            return (input.length < length)\n                ? {minlength: errorMessagePIN(fieldName, length)}\n                : null;\n        }\n\n        return null;\n    };\n}\n\nfunction errorMessagePIN(fieldName: string = 'field',\n                         length: number): string {\n    return app.Configuration.ContentMessage.PIN_4_digits;\n}\n\n@Directive({\n  selector: '[minlength]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: MinLengthValidatorDirective,\n    multi: true\n  }]\n})\n\nexport class MinLengthValidatorDirective implements Validator, OnChanges {\n  @Input() minlength: string;\n  valFn: ValidatorFn = Validators.nullValidator;\n\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change = changes['minlength'];\n    if (change) {\n      this.valFn = minlengthValidator(parseInt(change.currentValue, 0));\n    } else {\n      this.valFn = Validators.nullValidator;\n    }\n  }\n\n  validate(control: AbstractControl) {\n    return this.valFn(control);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/framework/validations/validator-minlength.directive.ts","import { BehaviorSubject } from \"rxjs/Rx\";\nimport {Utils} from \"../../../framework/services/utilities/utilities\";\n\nexport class CardBalanceSharingDataService {\n  private defaultMasterData: any = {};\n  private currentMasterData: any = Object.assign({}, this.defaultMasterData);\n  private _state$ = new BehaviorSubject<any>(this.currentMasterData);\n\n  get state$() {\n    return this._state$;\n  }\n\n  resetState() {\n    this.currentMasterData = Object.assign({}, this.defaultMasterData);\n    this._state$.next(this.currentMasterData);\n  }\n\n  saveStep1Screen(step1Model: any) {\n    this.currentMasterData.step1Model = step1Model;\n  }\n\n  saveStep2Screen(step2Model: any) {\n    this.currentMasterData.step2Model = step2Model;\n  }\n  getCardNumberAtStep1() {\n    return this.currentMasterData.step1Model.cardNumber;\n  }\n\n  getCardData() {\n    if (Utils.isNotNull(this.currentMasterData.step2Model)) {\n      let cardModel = {\n        // step 1\n        cardID: this.currentMasterData.step1Model.cardNumber,\n        // step 2\n        csc: this.currentMasterData.step2Model.securityCode\n      };\n      return cardModel;\n\n    } else {\n      let cardModel = {\n        cardID: this.currentMasterData.step1Model.cardNumber,\n      };\n      return cardModel;\n    }\n  }\n\n  getCardDataOnlyCardNumber() {\n    let cardModel = {\n      // step 1\n      cardNumber: this.currentMasterData.step1Model.cardNumber,\n\n    };\n\n    return cardModel;\n  }\n\n\n  // tslint:disable-next-line:member-ordering\n  private static _instance: CardBalanceSharingDataService = new CardBalanceSharingDataService();\n  public static getInstance(): CardBalanceSharingDataService {\n    return CardBalanceSharingDataService._instance;\n  }\n\n  constructor() {\n    if (CardBalanceSharingDataService._instance) {\n      throw new Error('Error: Instantiation failed: '\n        + 'Use CardBalanceSharingDataService.getInstance() instead of new.');\n    }\n\n    CardBalanceSharingDataService._instance = this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/cardBalanceSharingData.service.ts","import { Injectable } from '@angular/core';\nimport {HttpService} from \"../../../framework/services/httpService/http.service\";\n\n@Injectable()\nexport class CardBalanceDataService {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/cardBalanceData.service.ts","import { Component, ViewChildren, QueryList } from '@angular/core';\nimport {IonicPage, AlertController, NavController, NavParams, TextInput} from 'ionic-angular';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {requireValidator} from \"../../../../framework/validations/validator-required.directive\";\nimport {CardBalanceDataService} from \"../cardBalanceData.service\";\nimport {CardBalanceSharingDataService} from \"../cardBalanceSharingData.service\";\nimport {LoadingIndicatorService} from \"../../../../framework/services/loadingIndicatorService/loadingIndicator.service\";\nimport {ToastMessageService} from \"../../../../framework/services/toastMessageService/toastMessage.service\";\nimport {Utils} from \"../../../../framework/services/utilities/utilities\";\nimport {ChangeBalanceStep2Service, RetrieveBalanceRequestBody} from './checkBalanceStep2.service';\nimport {RouteManagerService} from \"../../../../framework/services/routeManager/routeManager.service\";\nimport {numericValidatorCSC} from \"../../../../framework/validations/validator-numeric.directive\";\nimport {minlengthValidatorCSC} from \"../../../../framework/validations/validator-minlength.directive\";\nimport {\n  maxlengthFieldValidator,\n  maxlengthFieldValidatorCSC\n} from \"../../../../framework/validations/validator-maxlengthField.directive\";\nimport {AppConfig as app} from \"../../../../framework/appConfig\";\n@IonicPage()\n@Component({\n  selector: 'page-checkBalanceStep2',\n  templateUrl: 'checkBalanceStep2.html',\n  providers: [\n    CardBalanceDataService,\n    CardBalanceSharingDataService,\n    ChangeBalanceStep2Service\n  ]\n})\n\nexport class CheckBalanceStep2Page {\n\n  cardNumberAtStep1: any = \"\";\n  messageContent: any = \"\";\n  code = 'resend-link-now';\n  cardNumberOld;\n  @ViewChildren(TextInput) textInputs: QueryList<TextInput>;    \n\n  constructor(private formBuilder: FormBuilder,\n              public routeManager: RouteManagerService,\n              private cardBalanceDataService: CardBalanceDataService,\n              private changeBalanceStep2Service: ChangeBalanceStep2Service,\n              public alertCtrl: AlertController,\n              public navCtrl: NavController,\n              public navParams: NavParams) {\n    this.buildForm();\n  }\n\n  checkBalanceForm: FormGroup;\n  formErrors = {\n    'cardNumber': '',\n    'securityCode': ''\n  };\n\n  buildForm() {\n    this.checkBalanceForm = this.formBuilder.group({\n      'cardNumber': [this.cardNumberAtStep1, [\n        requireValidator('cardNumber'),\n        maxlengthFieldValidator(19, 'Card or e-code number'),\n      ]],\n      'securityCode': ['', [\n        requireValidator('csc'),\n        minlengthValidatorCSC(3, 'CSC'),\n        maxlengthFieldValidatorCSC(3, 'CSC'),\n        numericValidatorCSC(),\n      ]]\n\n    }, {\n      validator: {\n        updateOn: 'blur'\n      }\n    });\n\n\n    this.checkBalanceForm.statusChanges.subscribe(() => {\n      if (this.textInputs) {\n        this.textInputs.forEach(input => input && input._inputUpdated && input._inputUpdated());\n      }\n    });\n\n  }\n\n  getHelpContent(code) {\n    LoadingIndicatorService.getInstance().showLoadingIndicator();\n    const observer = {\n      next: (res) => {\n        if (!res.ok) {\n          return;\n        }\n        if (res && res.response && res.response.message) {\n          this.showAlertHelp(res.response.message);\n        }\n      },\n      error: (error) => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      },\n      complete: () => {\n        LoadingIndicatorService.getInstance().hideLoadingIndicator();\n      }\n    };\n    this.changeBalanceStep2Service\n      .getHelpCSC(code)\n      .subscribe(observer);\n  }\n\n  showAlertHelp(message) {\n    let alert = this.alertCtrl.create({\n      title: '',\n      cssClass: 'l2s-alert--flat l2s-alert--default',\n      message: message,\n      buttons: [\n        {\n          text: 'OK',\n          cssClass: 'main-button',\n          handler: data => {\n          }\n        },{\n          text: '',\n          cssClass: 'close-button icon icon-ios ion-ios-close',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n\n  ionViewWillEnter() {\n    if (this.navParams.get('cardNumber')) {\n      this.cardNumberOld = this.navParams.get('cardNumber');\n      this.checkBalanceForm.patchValue({'cardNumber': this.cardNumberOld + ''});\n    }\n  }\n\n  detectChangeCard() {\n    if (this.checkBalanceForm.valid) {\n      let bodyPost = {\n        \"cardID\": this.checkBalanceForm.value.cardNumber\n      }\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (!res.ok) {\n            return;\n          }\n          let body = res.response;\n          this.checkNextStepNavigate(body)\n\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changeBalanceStep2Service\n        .retrieveCardType(bodyPost)\n        .subscribe(observer);\n    }\n  }\n\n  checkNextStepNavigate(cardInformation) {\n    if (Utils.isNotNull(cardInformation) && cardInformation.cardType === 'FLEXECODE_2.0') {\n      this.navCtrl.setRoot('CheckBalanceStep1Page', {cardNumber: this.checkBalanceForm.value.cardNumber});\n    } else {\n      const body: RetrieveBalanceRequestBody = {\n        cardID: this.checkBalanceForm.value.cardNumber,\n        csc: this.checkBalanceForm.value.securityCode\n      };\n      this.getBalanceData(body);\n    }\n  }\n\n  submitToCheckCardBalance() {\n    if (this.cardNumberOld !== this.checkBalanceForm.value.cardNumber) {\n      this.detectChangeCard();\n      return;\n    }\n    if (this.checkBalanceForm.valid) {\n      const body: RetrieveBalanceRequestBody = {\n        cardID: this.checkBalanceForm.value.cardNumber,\n        csc: this.checkBalanceForm.value.securityCode\n      };\n      this.getBalanceData(body);\n    }\n  }\n\n\n  getBalanceData(cardInfor) {\n    if (this.checkBalanceForm.valid) {\n      LoadingIndicatorService.getInstance().showLoadingIndicator();\n      const observer = {\n        next: (res) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n          if (!res.ok) {\n            return;\n          }\n          let balanceValue = res.response;\n          this.navCtrl\n            .setRoot('CheckBalanceStep3Page', {'balanceValue': balanceValue, 'cardNumber': this.checkBalanceForm.value.cardNumber});\n        },\n        error: (error) => {\n          LoadingIndicatorService.getInstance().hideLoadingIndicator();\n        }\n      };\n      this.changeBalanceStep2Service\n        .getBalanceCard(cardInfor)\n        .subscribe(observer);\n    }\n  }\n\n  errorMessage(path: string) {\n    const control = this.checkBalanceForm.get(path);\n    const requiredMsg = app.Configuration.ContentMessage.required;\n    if (control.valid) {\n      return '';\n    }\n\n    if (path === 'cardNumber' || path === 'securityCode') {\n      if (control.hasError('required')) {\n        return control.getError('required');\n      }else {\n        if (control.hasError('maxLengthField')) {\n          return control.getError('maxLengthField')\n        }\n\n        if (control.hasError('minlength')) {\n          return control.getError('minlength')\n        }\n\n        if (control.hasError('key')) {\n          return control.getError('key')\n        }\n      }\n    }\n  }\n\n\n  gotoStep1() {\n    this.navCtrl.setRoot('CheckBalanceStep1Page', {'cardNumber': this.checkBalanceForm.value.cardNumber});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpService} from \"../../../../framework/services/httpService/http.service\";\n\nexport interface RetrieveBalanceRequestBody {\n  'cardID': string;\n  'csc': string;\n}\n\n@Injectable()\nexport class ChangeBalanceStep2Service {\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  retrieveCardType(cardId): Observable<any> {\n    return this.http.postwithoutAuthorization(\"card/type\", cardId);\n  }\n\n  getHelpCSC(code): Observable<any> {\n    return this.http.get(\"cms/message/code=\"+ code);\n  }\n\n  getBalanceCard(cardInformation): Observable<any> {\n    return this.http.postwithoutAuthorWithoutRequestType(\"card/balance-status\", cardInformation);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/CardManagement/checkBalance/checkBalanceStep2/checkBalanceStep2.service.ts"],"sourceRoot":""}