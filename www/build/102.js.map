{"version":3,"sources":["../../src/spa/+screens/AccountManagement/changeTouchID/changeTouchID.module.ts","../../src/spa/+screens/AccountManagement/changeTouchID/changeTouchID.ts"],"names":[],"mappings":"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","file":"102.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangeTouchIDPage } from './changeTouchID';\n\n@NgModule({\n  declarations: [ChangeTouchIDPage],\n  imports: [\n    IonicPageModule.forChild(ChangeTouchIDPage),\n    FormsModule\n  ],\n  exports: [ChangeTouchIDPage]\n})\nexport class ChangeTouchIDPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changeTouchID/changeTouchID.module.ts","import { Component } from '@angular/core';\nimport { NavController, IonicPage, ModalController } from 'ionic-angular';\nimport { VerifyPINService } from \"../verifyPIN/verifyPIN.service\";\nimport { VerifyPINPage } from \"../verifyPIN/verifyPIN\";\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio';\nimport { ToastMessageService } from \"../../../framework/services/toastMessageService/toastMessage.service\";\nimport $ from 'jquery';\nimport { AppConfig as app } from \"../../../framework/appConfig\";\n\n@IonicPage()\n@Component({\n  selector: 'page-changeTouchID',\n  templateUrl: 'changeTouchID.html'\n})\nexport class ChangeTouchIDPage {\n  touchIDState: boolean;\n  touchAvailable: boolean;\n  messageTouchNotAvailable = app.Configuration.ContentMessage.park_api_touch_ID_not_available;\n  use_fingerprint_not_PIN = app.Configuration.ContentMessage.use_fingerprint_not_PIN;\n  use_same_finger = app.Configuration.ContentMessage.use_same_finger;\n  isChangeTouchAvailable = false;\n\n  ionViewWillEnter() {\n    $('.app-root').addClass('not-show-tab');\n    const vPinSvc = VerifyPINService.getInstance();\n    vPinSvc.IsChangeTouchScreen = true;\n    this.isChangeTouchAvailable = true;\n\n    // After verify PIN then check touch is available or not\n    // if not redirect to setting page.\n    vPinSvc.verifyPINClosedInChangeTouch.subscribe(res => {\n      if (res === true && this.isChangeTouchAvailable === true) {\n        // No touch available then redirect to setting page.\n        this.isChangeTouchAvailable = false;\n        ToastMessageService.getInstance().showToastMessage(this.messageTouchNotAvailable);\n        VerifyPINService.getInstance().touchIDState = false;\n        this.navCtrl.setRoot('SettingsPage');\n      }\n    });\n  }\n\n  ionViewWillLeave() {\n    $('.app-root').removeClass('not-show-tab');\n  }\n\n  ionViewDidLeave() {\n    VerifyPINService.getInstance().IsChangeTouchScreen = false;\n  }\n\n  changeTouchState() {\n    this.touchId.isAvailable().then(res => {\n      this.showVerifyPIN(this.touchIDState);\n    })\n      .catch(err => {\n        this.navCtrl.setRoot('SettingsPage');\n        ToastMessageService.getInstance().showToastMessage(this.messageTouchNotAvailable);\n      });\n  }\n\n  showVerifyPIN(state) {\n    const vPinSvc = VerifyPINService.getInstance();\n    let verifyScreenModal: any;\n    verifyScreenModal = this.modalCtrl.create(VerifyPINPage,\n      { callFrom: 'ChangeTouchID', touchState: state },\n      {\n        cssClass: 'touchable-page'\n      });\n\n    verifyScreenModal.onDidDismiss(() => {\n      if (this.touchIDState === true) {\n        this.touchId.isAvailable()\n          .then(res => {\n            VerifyPINService.getInstance().touchIDState = this.touchIDState;\n          })\n          .catch(err => {\n            this.navCtrl.setRoot('SettingsPage');\n            ToastMessageService.getInstance().showToastMessage(this.messageTouchNotAvailable);\n          })\n      } else {\n        VerifyPINService.getInstance().touchIDState = this.touchIDState;\n      }\n\n      vPinSvc.VisibleScreen = false;\n    });\n    verifyScreenModal.present();\n  }\n\n  constructor(public navCtrl: NavController,\n    public modalCtrl: ModalController,\n    private touchId: FingerprintAIO) {\n    this.touchIDState = VerifyPINService.getInstance().touchIDState;\n    this.touchAvailable = true;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/spa/+screens/AccountManagement/changeTouchID/changeTouchID.ts"],"sourceRoot":""}